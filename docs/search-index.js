var searchIndex = new Map(JSON.parse('[\
["chuffed_rs",{"doc":"","t":"CCFHHHFFFHISSSSFFFHFHHHIIHHFSSHFHHHHHHHHHHHFISSSSSFFFUFFFISSSSSSSSFISSSSSSSSSSSSSSSSISSSSSFFOOOOOOOOOOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHONNOONNNHNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNHNOOONHNNNNNNNNNNNNNNNNNNNNNNONHOOOONNNNNHHHHOHHHNNOOOOOOOOOONNNNNNNNNOOONHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOHFOONOHHHHHHH","n":["bindings","wrappers","BoolView","BoolView_attach","BoolView_detach","BoolView_getScore","Branching","Branching__bindgen_vtable","Clause","Clause_debug","ConLevel","ConLevel_CL_BND","ConLevel_CL_DEF","ConLevel_CL_DOM","ConLevel_CL_VAL","DecInfo","DummyProblem","IntVar","IntVar_IntVar","IntVar_PropInfo","IntVar_allowSet","IntVar_attach","IntVar_branch","IntVar_const_iterator","IntVar_const_reverse_iterator","IntVar_getScore","IntVar_initVals","IntVar_iterator","IntVar_max_limit","IntVar_min_limit","IntVar_remVal","IntVar_reverse_iterator","IntVar_setMax","IntVar_setMin","IntVar_setVal","IntVar_simplifyWatches","IntVar_specialiseToEL","IntVar_specialiseToLL","IntVar_specialiseToSL","IntVar_updateFixed","IntVar_updateMax","IntVar_updateMin","IntVar_wakePropagators","Lit","PreferredVal","PreferredVal_PV_MAX","PreferredVal_PV_MEDIAN","PreferredVal_PV_MIN","PreferredVal_PV_SPLIT_MAX","PreferredVal_PV_SPLIT_MIN","Propagator","Propagator__bindgen_vtable","Reason","Reason__bindgen_ty_1","Reason__bindgen_ty_1__bindgen_ty_1","Tchar","Tint","ValBranch","ValBranch_VAL_DEFAULT","ValBranch_VAL_MAX","ValBranch_VAL_MEDIAN","ValBranch_VAL_MIDDLE","ValBranch_VAL_MIN","ValBranch_VAL_RANDOM","ValBranch_VAL_SPLIT_MAX","ValBranch_VAL_SPLIT_MIN","Var","VarBranch","VarBranch_VAR_ACTIVITY","VarBranch_VAR_DEFAULT","VarBranch_VAR_DEGREE_MAX","VarBranch_VAR_DEGREE_MIN","VarBranch_VAR_INORDER","VarBranch_VAR_MAX_MAX","VarBranch_VAR_MAX_MIN","VarBranch_VAR_MIN_MAX","VarBranch_VAR_MIN_MIN","VarBranch_VAR_PSEUDO_COST","VarBranch_VAR_RANDOM","VarBranch_VAR_REDUCED_COST","VarBranch_VAR_REGRET_MAX_MAX","VarBranch_VAR_REGRET_MIN_MAX","VarBranch_VAR_SIZE_MAX","VarBranch_VAR_SIZE_MIN","VarType","VarType_BOOL_VAR","VarType_INT_VAR","VarType_INT_VAR_EL","VarType_INT_VAR_LL","VarType_INT_VAR_SL","__BindgenBitfieldUnit","__IncompleteArrayField","__bindgen_anon_1","_base","_base","_base","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_phantom_0","a","activity","all_different","all_in_scip","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch_IntVar","callback","cap","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","createVar","createVars","createVars1","createVars2","createVars3","d","d1","d2","data","data","debug","default","default","destroy_vec_intvar","detach","eflags","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_bit","get_idx","hash","in_queue","in_queue","in_scip","initVals","int_plus","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","last_solution_value","learnt","make_vec_intvar","max","max0","min","min0","new","new","new","new_bitfield_1","new_bitfield_1","new_dummy_problem","new_xyz_problem","output_vars","output_vars1","p","p_addVars","p_print","p_setcallback","padding","partial_cmp","pinfo","pos","preferred_val","priority","prop_id","pt","s","satisfied","sbps_value_selection","searchVars","set","set_bit","set_d1","set_d2","set_learnt","set_padding","set_sz","set_temp_expl","set_type","shadow_val","should_be_decidable","should_be_learnable","simplifyWatches","solve_xyz","specialiseToEL","specialiseToLL","specialiseToSL","sz","sz","temp_expl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updateFixed","updateMax","updateMin","v","v","v","val","val","val","vals","var","var","var","var_id","var_sym_break","vec","vtable_","vtable_","wakePropagators","x","all_different_wrapper","branch_wrapper","create_var","create_vars","int_plus_wrapper","output_vars_wrapper","var_sym_break_wrapper"],"q":[[0,"chuffed_rs"],[2,"chuffed_rs::bindings"],[429,"chuffed_rs::wrappers"],[436,"std::os::raw"],[437,"core::clone"],[438,"core::cmp"],[439,"core::cmp"],[440,"core::cmp"],[441,"core::fmt"],[442,"core::convert"],[443,"core::hash"],[444,"core::cmp"],[445,"core::any"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,33,4,34,25,17,25,17,32,16,34,0,34,1,1,1,1,4,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,0,0,21,32,34,8,10,11,12,13,14,15,16,17,18,19,20,21,8,10,11,12,13,14,15,16,17,18,19,20,21,8,0,0,0,0,0,16,17,17,32,25,25,8,1,0,4,18,8,8,1,32,10,11,12,13,14,25,17,5,33,4,34,18,19,20,21,52,20,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,8,8,0,8,5,34,34,34,0,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,25,0,34,34,34,34,8,1,34,25,17,0,0,0,0,18,0,0,0,25,8,34,18,34,5,5,16,4,5,34,21,8,8,17,17,25,25,25,25,17,34,34,34,34,0,34,34,34,25,32,25,8,10,11,12,13,14,15,16,17,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,17,12,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,34,34,10,11,4,53,12,19,34,53,12,19,34,0,0,13,5,34,14,0,0,0,0,0,0,0],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}}{}{}}{{{b{c}}d}{{f{c}}}{}}10{{hjll}n}{ce{}{}}0000000000000000000000000000000000000000000`````{{{A`{c}}}{{A`{c}}}Ab}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{{ce}n{}{}}000000000000{{{A`{c}}{A`{c}}}BlBn}``````{BbC`}0``{Cbn}{{}{{A`{c}}}Cd}{{}{{b{c}}}Cd}`{{hjll}n}`{{{A`{c}}{A`{c}}}CfCh}{{{A`{c}}Cj}ClCn}{{{b{c}}Cj}Cl{}}{{{D`{c}}Cj}ClCn}{{AdCj}Cl}{{AfCj}Cl}{{AhCj}Cl}{{AjCj}Cl}{{AlCj}Cl}{{CbCj}Cl}{{BbCj}Cl}{{jCj}Cl}{{DbCj}Cl}{{hCj}Cl}{{DdCj}Cl}{{BdCj}Cl}{{BfCj}Cl}{{BhCj}Cl}{{BjCj}Cl}``{cc{}}000000000000000000000{{{A`{c}}dDf}Dh{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{{A`{c}}d}Cf{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}`{{{A`{c}}e}nDnE`}```{{DdCf}n}`{ce{}{}}000000000000000000000`{CbC`}`````{c{{A`{c}}}{}}{{}{{b{c}}}{}}{{ll}Dd}{{C`C`C`C`}{{A`{{Eb{Df}}}}}}{{C`C`C`}{{A`{{Eb{Df}}}}}}````````5{{{A`{c}}{A`{c}}}{{Ed{Bl}}}Ef}``````````{{{A`{c}}dDfDh}n{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{{A`{c}}dCf}n{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{BbC`}n}0{{CbC`}n}0001```{Ddl}`{Ddn}0{{DdD`}n}=`=>>>>>>>>>>>>>{c{{Eh{e}}}{}{}}0000000000000000000000000000000000000000000{BbC`}`{cEj{}}000000000000000000000444```````````````4`{{D`El}n}{{D`EnF`}n}{{FbFbCf}Dd}{{FbFbFbCf}D`}{{DdDdDd}n}{D`n}0","c":[],"p":[[5,"__IncompleteArrayField",2],[1,"usize"],[1,"slice"],[5,"BoolView",2],[5,"Propagator",2],[8,"c_int",436],[1,"unit"],[5,"__BindgenBitfieldUnit",2],[10,"Clone",437],[5,"Tchar",2],[5,"Tint",2],[5,"DecInfo",2],[5,"Branching",2],[5,"Lit",2],[5,"Reason",2],[20,"Reason__bindgen_ty_1",2],[5,"Reason__bindgen_ty_1__bindgen_ty_1",2],[5,"IntVar_PropInfo",2],[5,"IntVar_iterator",2],[5,"IntVar_reverse_iterator",2],[5,"DummyProblem",2],[6,"Ordering",438],[10,"Ord",438],[8,"c_uint",436],[5,"Clause",2],[10,"Default",439],[1,"bool"],[10,"PartialEq",438],[5,"Formatter",440],[8,"Result",440],[10,"Debug",440],[5,"vec",2],[5,"Var",2],[5,"IntVar",2],[1,"u8"],[1,"u64"],[10,"AsRef",441],[10,"AsMut",441],[10,"Hash",442],[10,"Hasher",442],[1,"array"],[6,"Option",443],[10,"PartialOrd",438],[6,"Result",444],[5,"TypeId",445],[8,"ConLevel",2],[8,"VarBranch",2],[8,"ValBranch",2],[1,"i32"],[5,"Branching__bindgen_vtable",2],[5,"Propagator__bindgen_vtable",2],[8,"IntVar_const_reverse_iterator",2],[8,"IntVar_const_iterator",2]],"b":[]}],\
["conjure_core",{"doc":"","t":"ECDCCCCCCCCCPPPPPGPFGPGPPPPPPPPPGPPPPGPPPPPPIPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNOONNNNNNOONNNOONNNNNPGPPPPPINNNNNNNNNNNNNNFNNNNNNNONNNNNNNNNNNNNNNFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNONHHHGIPPPFPGFPFNNNCONNNNNNNNNNNNNNNNNNXNNNNNNNNNNNNNNNNNHHHHHHNHNNNNNNNOONNNOOONXQHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXEHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNCNNNNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOFFNNNNNNNNNNNONNNNNNNNNNNNNOOOONNNNNNOOONNNNNNNNNNN","n":["Model","ast","conjure_core","context","error","metadata","model","parse","rule_engine","rules","solver","stats","AllDiff","And","Bool","BoolDomain","Bounded","Constant","Constant","DecisionVariable","Domain","Eq","Expression","Geq","Gt","Ineq","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","into","into","into","is_all_diff","is_and","is_constant","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","max_i32","min_i32","min_max_i32","new","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uniplate","vzip","vzip","vzip","vzip","vzip","vzip","Context","__clone_box","borrow","borrow_mut","clone","clone_into","default","do_erased_serialize","eq","erased_serialize","extra_rule_set_names","file_name","fmt","from","into","json_schema","new","new_ptr","rule_sets","rules","schema_id","schema_name","serialize","stats","target_solver_family","to_owned","try_from","try_into","type_id","vzip","Err","Error","JSON","NotImplemented","Ok","Other","Parse","Result","borrow","borrow_mut","fmt","fmt","from","from","from","into","source","to_string","try_from","try_into","type_id","vzip","Metadata","__clone_box","borrow","borrow_mut","clone","clone_into","default","deserialize","dirtyclean","do_erased_serialize","eq","erased_serialize","fmt","fmt","from","into","new","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Model","__clone_box","add_constraint","add_constraints","add_variable","borrow","borrow_mut","clone","clone_into","constraints","context","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","gensym","get_constraints_vec","get_domain","into","new","new_empty","serialize","set_constraints","set_context","to_owned","try_from","try_into","type_id","update_domain","variables","vzip","get_example_model","get_example_model_by_path","model_from_json","ApplicationError","ApplicationResult","BoundError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","__clone_box","__clone_box","__clone_box","_dependencies","application","apply","apply","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","distributed_slice","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_dependencies","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","get_rules_vec","hash","hash","into","into","into","into","into","name","name","new","new","new","new_expression","new_top","order","pure","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","distributed_slice","linkme","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_family","get_family","get_name","hash","init_solver","into","into","into","into","into","into","into","into","into_iter","iter","json_schema","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","schema_id","schema_name","serialize","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","SolverStats","Stats","__clone_box","__clone_box","add_solver_run","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","conjure_solver_wall_time_s","default","default","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","from","from","into","into","json_schema","json_schema","new","nodes","sat_clauses","sat_vars","satisfiable","schema_id","schema_id","schema_name","schema_name","serialize","serialize","solver_adaptor","solver_family","solver_runs","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_timings"],"q":[[0,"conjure_core"],[12,"conjure_core::ast"],[191,"conjure_core::context"],[221,"conjure_core::error"],[243,"conjure_core::metadata"],[267,"conjure_core::model"],[300,"conjure_core::parse"],[303,"conjure_core::rule_engine"],[416,"conjure_core::rule_engine::_dependencies"],[418,"conjure_core::rules"],[419,"conjure_core::solver"],[568,"conjure_core::solver::adaptors"],[599,"conjure_core::solver::model_modifier"],[624,"conjure_core::solver::states"],[666,"conjure_core::stats"],[717,"dyn_clone::sealed"],[718,"core::option"],[719,"core::clone"],[720,"core::cmp"],[721,"core::result"],[722,"serde::de"],[723,"serde::de"],[724,"erased_serde::ser"],[725,"core::fmt"],[726,"core::fmt"],[727,"serde::ser"],[728,"serde::ser"],[729,"core::any"],[730,"alloc::vec"],[731,"core::ops::function"],[732,"alloc::boxed"],[733,"schemars::gen"],[734,"schemars::schema"],[735,"std::sync::rwlock"],[736,"alloc::sync"],[737,"alloc::borrow"],[738,"anyhow"],[739,"serde_json::error"],[740,"core::error"],[741,"std::collections::hash::set"],[742,"std::collections::hash::map"],[743,"core::fmt"]],"d":["","","","","Top-level error types for Conjure-Oxide.","","","","","","A high-level API for interacting with constraints solvers.","","<strong>Supported by:</strong> Minion.","<strong>Supported by:</strong> JsonInput, SAT.","","","","","<strong>Supported by:</strong> Minion, JsonInput.","","","<strong>Supported by:</strong> JsonInput.","Compatability","<strong>Supported by:</strong> JsonInput.","<strong>Supported by:</strong> JsonInput.","<strong>Supported by:</strong> Minion.","","","<strong>Supported by:</strong> JsonInput.","<strong>Supported by:</strong> JsonInput.","","<strong>Supported by:</strong> JsonInput.","","<strong>Supported by:</strong> JsonInput.","<strong>Supported by:</strong> JsonInput, SAT.","Represents an empty expressionNB: we only expect this at …","<strong>Supported by:</strong> JsonInput, SAT.","","<strong>Supported by:</strong> Minion, JsonInput, SAT.","","<strong>Supported by:</strong> Minion, JsonInput.","","<strong>Supported by:</strong> Minion.","<strong>Supported by:</strong> Minion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this <code>Expression</code> a <code>AllDiff</code>?","Is this <code>Expression</code> a <code>And</code>?","Is this <code>Expression</code> a <code>Constant</code>?","Is this <code>Expression</code> a <code>Eq</code>?","Is this <code>Expression</code> a <code>Geq</code>?","Is this <code>Expression</code> a <code>Gt</code>?","Is this <code>Expression</code> a <code>Ineq</code>?","Is this <code>Expression</code> a <code>Leq</code>?","Is this <code>Expression</code> a <code>Lt</code>?","Is this <code>Expression</code> a <code>Min</code>?","Is this <code>Expression</code> a <code>Neq</code>?","Is this <code>Expression</code> a <code>Not</code>?","Is this <code>Expression</code> a <code>Nothing</code>?","Is this <code>Expression</code> a <code>Or</code>?","Is this <code>Expression</code> a <code>Reference</code>?","Is this <code>Expression</code> a <code>Sum</code>?","Is this <code>Expression</code> a <code>SumEq</code>?","Is this <code>Expression</code> a <code>SumGeq</code>?","Is this <code>Expression</code> a <code>SumLeq</code>?","Returns the maximum i32 value a variable of the domain can …","Returns the minimum i32 value a variable of the domain can …","Returns the minimum and maximum integer values a variable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Contains the error value","","","","Contains the success value","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns an arbitrary variable name that is not in the …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Searches recursively in <code>../tests/integration</code> folder for an …","Searches for an <code>.essence</code> file at the given filepath, then …","","","The result of applying a rule to an expression. Contains …","","Contains the error value","Contains the success value","The result of applying a rule to an expression.","","","A rule with a name, application function, and rule sets.","","A set of rules with a name, priority, and dependencies.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the dependencies of this rule set, evaluating them …","Get a rule by name. Returns the rule with the given name …","Convert a list of rule sets into a final map of rules to …","Get a rule set by name. Returns the rule set with the …","Get all rule sets Returns a <code>Vec</code> of static references to …","Get all rule sets for a given solver family. Returns a <code>Vec</code> …","Returns a copied <code>Vec</code> of all rules registered with the …","Get the rules of this rule set, evaluating them lazily if …","Get a final ordering of rules based on their priorities …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The name of the rule set.","","","","","","Order of the RuleSet. Used to establish a consistent order …","Represents a reduction with no side effects on the model.","This procedural macro registers a decorated function with …","This procedural macro registers a rule set with the global …","Resolves the final set of rule sets to apply based on …","Rewrites the model by applying the rules to all …","","The solver families that this rule set applies to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the dependencies of this rule set, including itself","Represents a reduction that also modifies the symbol table.","Represents a reduction that also adds a top-level …","","","Simplify an expression to a constant if possible Returns: …","The search was complete (i.e. the solver found all …","","The search was incomplete (i.e. it was terminated before …","","","","","","","","","","","","","","Returned from SolverAdaptor when solving is successful.","An abstract representation of a constraints solver.","A common interface for calling underlying solver APIs …","The type for user-defined callbacks for use with Solver.","Errors returned by Solver on failure.","","An iterator over the variants of SolverFamily","","","","","","","","Solver adaptors.","Adds the solver adaptor name and family (if they exist) to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the solver family that this solver adaptor belongs to","","Gets the name of the solver adaptor for pretty printing.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Modifying a model during search.","","","","","","","","","","Runs the solver on the given model.","","Runs the solver on the given model, allowing modification …","","States of a <code>Solver</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A SolverAdaptor for interacting with the Kissat SAT solver.","A SolverAdaptor for interacting with Minion.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An unspecified error has occurred.","A ModelModifier provides an interface to modify a model …","The requested modification to the model has failed.","A <code>ModelModifier</code> for a solver that does not support …","The desired operation is supported by this solver adaptor, …","The desired operation is not supported for this solver …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","The state returned by <code>Solver</code> if solving has not been …","The state returned by <code>Solver</code> if solving has been …","","","","Cannot construct this from outside this module.","Cannot construct this from outside this module.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Execution statistics.","The status of the search","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wall time as measured by Conjure-Oxide (not the solver).","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The solver adaptor used for this run.","The solver family used for this run.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,3,8,11,9,0,3,0,0,3,0,3,3,3,8,11,3,3,12,3,0,3,3,3,3,0,3,9,3,3,3,3,0,12,8,9,11,3,12,13,8,9,11,3,12,13,8,9,11,3,12,13,3,8,9,11,3,12,13,8,9,11,3,12,13,12,8,9,11,3,12,13,8,9,11,3,12,13,13,8,9,11,3,12,13,8,9,11,3,12,13,8,8,9,11,3,3,12,12,13,13,8,9,11,3,12,13,12,8,9,11,3,12,13,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,13,12,8,9,11,3,12,13,8,9,11,3,12,13,8,3,12,13,8,9,11,3,12,13,8,9,11,3,12,13,8,9,11,3,12,13,3,8,9,11,3,12,13,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,50,0,44,44,50,44,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,54,52,52,0,53,0,0,54,0,51,39,40,0,39,51,39,53,54,51,39,40,53,54,51,39,40,51,39,40,51,39,40,0,39,40,53,53,54,54,51,39,39,40,40,53,54,51,39,40,40,0,0,0,0,0,0,40,0,39,40,53,54,51,39,40,39,40,51,39,40,51,51,40,51,0,0,0,0,39,40,51,51,39,40,53,54,39,40,53,54,51,39,40,53,54,51,39,40,53,54,51,39,40,53,54,51,39,40,40,51,51,0,0,0,81,82,81,37,66,66,66,82,66,66,66,66,37,0,0,0,0,0,0,0,0,0,0,0,83,83,37,63,64,66,0,61,73,81,83,82,37,63,64,66,73,81,83,82,37,63,64,66,37,63,64,66,37,63,64,66,37,37,37,37,37,37,63,66,66,73,81,83,82,37,63,64,66,37,61,64,61,37,61,73,81,83,82,37,63,64,66,63,37,37,63,61,64,0,64,63,63,63,64,37,37,37,63,61,64,61,64,0,64,37,63,64,66,37,66,73,81,83,82,37,37,63,64,66,73,81,83,82,37,63,64,66,73,81,83,82,37,63,64,66,73,81,83,82,37,63,64,66,64,0,0,76,77,76,77,76,77,76,77,76,77,77,76,77,76,77,76,77,76,77,76,77,76,77,76,77,76,77,76,77,79,79,0,0,0,79,79,78,78,84,79,84,79,84,79,84,79,84,79,84,79,84,79,84,79,0,0,0,0,0,71,85,69,70,71,85,69,70,71,85,69,70,71,85,69,70,71,85,71,71,69,70,71,85,69,70,71,85,69,70,71,85,69,70,71,85,85,0,0,62,80,80,62,80,62,80,62,80,62,80,62,62,80,62,80,62,80,62,80,62,80,62,80,80,62,62,62,62,62,80,62,80,62,80,62,62,80,62,80,62,80,62,80,62,80,62,80,62],"f":"``````````````````````````````````````````````{{cb}d{}}00000{ce{}{}}00000000000{{fh}{{n{{l{jj}}}}}}{A`A`}{{{Ab{c}}}{{Ab{c}}}Ad}{AfAf}{ff}{AhAh}{AjAj}{{ce}d{}{}}00000{{AhAh}Al}{c{{An{A`}}}B`}{c{{An{{Ab{e}}}}}B`Bb}{c{{An{Af}}}B`}{c{{An{f}}}B`}{c{{An{Ah}}}B`}{c{{An{Aj}}}B`}{{cBd}{{An{dBf}}}{}}00000`{{A`A`}Bh}{{{Ab{c}}{Ab{c}}}BhBj}{{AfAf}Bh}{{ff}Bh}{{AhAh}Bh}{{AjAj}Bh}{{cBd}{{An{dBl}}}{}}00000{{A`Bn}C`}0{{{Ab{c}}Bn}C`Cb}{{AfBn}C`}{{fBn}C`}0{{AhBn}C`}0{{AjBn}C`}0{cc{}}00000{{Ahc}dCd}{ce{}{}}00000{fBh}000000000000000000{Af{{n{j}}}}0{Af{{n{{l{jj}}}}}}{AfAj}{{AhAh}{{n{Al}}}}{{A`c}AnCf}{{{Ab{c}}e}AnChCf}{{Afc}AnCf}{{fc}AnCf}{{Ahc}AnCf}{{Ajc}AnCf};;;;;;{cCj{}}000{c{{An{e}}}{}{}}00000000000{cCl{}}00000{f{{l{{Cn{f}}{Db{D`}}}}}}??????`{{cb}d{}}{ce{}{}}0{DdDd}{{ce}d{}{}}{{}Dd}{{cBd}{{An{dBf}}}{}}{{DdDd}Bh}{{cBd}{{An{dBl}}}{}}``{{DdBn}C`}{cc{}}8{DfDh}{{Dj{Cn{Dl}}{Cn{Dn}}{Cn{E`}}}Dd}{{Dj{Cn{Dl}}{Cn{Dn}}{Cn{E`}}}{{Ed{{Eb{Dd}}}}}}``{{}{{Ef{Dl}}}}{{}Cj}{{Ddc}AnCf}``>{c{{An{e}}}{}{}}0{cCl{}}{ce{}{}}````````00{{EhBn}C`}0:{EjEh}{ElEh}3{Eh{{n{En}}}}{cCj{}}7765`{{cb}d{}}66{F`F`}{{ce}d{}{}}{{}F`}{c{{An{F`}}}B`}`{{cBd}{{An{dBf}}}{}}{{F`F`}Bh}{{cBd}{{An{dBl}}}{}}{{F`Bn}C`}0{cc{}}?6{{F`c}AnCf}{ce{}{}}<{c{{An{e}}}{}{}}0{cCl{}}2`={{Fbf}d}{{Fb{Cn{f}}}d}{{FbAhAj}d}55{FbFb}?``{c{{An{Fb}}}B`}={{FbFb}Bh}<{{FbBn}C`};{FbAh}{Fb{{Cn{f}}}}{{FbAh}{{n{Af}}}}<{{hf{Ed{{Eb{Dd}}}}}Fb}{{{Ed{{Eb{Dd}}}}}Fb}{{Fbc}AnCf};{{Fb{Ed{{Eb{Dd}}}}}d}{ce{}{}}{c{{An{e}}}{}{}}0{cCl{}}{{FbAhAf}d}`3{Dl{{An{FbEj}}}}0{{Dl{Ed{{Eb{Dd}}}}}{{Fd{Fb}}}}```````````{{cb}d{}}00``{{FfFb}d}{{DnfFb}Fh}8888888888{FfFf}{DnDn}{E`E`}{{ce}d{}{}}00`{{DnDn}Bh}{{E`E`}Bh}{{FjBn}C`}0{{FlBn}C`}0{{FfBn}C`}{{DnBn}C`}0{{E`Bn}C`}0{cc{}}0000{E`{{Fn{E`}}}}{Dl{{n{Dn}}}}{{{Cn{E`}}}{{An{{Gb{DnG`}}`}}}}{Dl{{n{E`}}}}{{}{{Cn{E`}}}}{Dj{{Cn{E`}}}}{{}{{Cn{Dn}}}}{E`{{Gb{DnG`}}}}{{{Gb{DnG`}}}{{Cn{Dn}}}}{{Dnc}dCd}{{E`c}dCd}{ce{}{}}0000``{{ffh}Ff}{{Dl{Gf{fFb}{{Gd{Fh}}}}{Gh{{l{DlG`}}}}}Dn}{{DlG`{Gh{Dl}}{Gh{Dj}}}E`}```{fFf}``{{Dj{Cn{Dl}}}{{An{{Cn{E`}}`}}}}{{Fb{Cn{E`}}}{{An{FbFj}}}}```666{cCj{}}000{c{{An{e}}}{}{}}000000000{cCl{}}000099999{E`{{Fn{E`}}}}{{fh}Ff}{{ff}Ff}``{f{{n{A`}}}}``````````````````````````{{cb}d{}}000`{{GjGl}Gl}????????????????{DjDj}{GnGn}{{{H`{ce}}}{{H`{ce}}}{AdGj}{AdHb}}{HdHd}{{ce}d{}{}}000{c{{An{Dj}}}B`}{{cBd}{{An{dBf}}}{}}{{DjDj}Bh}{{cBd}{{An{dBl}}}{}}{{DjBn}C`}{{DjBn}{{An{dHf}}}}{{GnBn}C`}{{HdBn}C`}0{cc{}}0000000{Dl{{An{Djc}}}{}}{GjDj}{{{H`{c}}}DjGj}{Gj{{n{Cj}}}}{{Djc}dCd}`{ce{}{}}00000000{{}Gn}{DfDh}{GnHh}`{{{H`{cHj}}Fb}{{An{{H`{cHl}}Hd}}}Gj}`{c{{H`{c}}}Gj}{Gn{{n{c}}}{}}0{{GnHh}{{n{c}}}{}}{{{H`{cHn}}}dGj}{{}{{Ef{Dl}}}}{{}Cj}{{Djc}AnCf}{Gn{{l{Hh{n{Hh}}}}}}`{{{H`{cHl}}I`}{{An{{H`{cHn}}Hd}}}Gj}`{{{H`{cHl}}Id}{{An{{H`{cHn}}Hd}}}Gj}`{{{H`{cHn}}}GlGj}????{cCj{}}0{c{{An{e}}}{}{}}000{Dl{{An{Djc}}}{}}111111111111{cCl{}}0000000{ce{}{}}0000000{{{H`{cHn}}}IfGj}``1111{{}Ih}{{}Ij}{cc{}}0{IhDj}{IjDj}{Ij{{n{Cj}}}}77``54````::::8877```````{{Ilf}{{An{dIn}}}}{{IlAhAf}{{An{dIn}}}}99995599<<<<::99```````9999999955559999``<<<<<<<<::::9999```{{cb}d{}}0{{J`Gl}d};;;;{GlGl}{J`J`}{{ce}d{}{}}0`{{}Gl}{{}J`}{{cBd}{{An{dBf}}}{}}0{{cBd}{{An{dBl}}}{}}0>>{ce{}{}}0{DfDh}04````{{}{{Ef{Dl}}}}0{{}Cj}0{{Glc}AnCf}{{J`c}AnCf}```55{c{{An{e}}}{}{}}000{cCl{}}077{{GlIf}Gl}","c":[],"p":[[5,"Private",717],[1,"unit"],[6,"Expression",12],[8,"SymbolTable",12],[1,"i32"],[1,"tuple"],[6,"Option",718],[6,"Constant",12],[6,"Range",12],[10,"Clone",719],[6,"Domain",12],[6,"Name",12],[5,"DecisionVariable",12],[6,"Ordering",720],[6,"Result",721],[10,"Deserializer",722],[10,"Deserialize",722],[10,"Serializer",723],[6,"ErrorImpl",723],[1,"bool"],[10,"PartialEq",720],[5,"Error",724],[5,"Formatter",725],[8,"Result",725],[10,"Debug",725],[10,"Hasher",726],[10,"Serializer",727],[10,"Serialize",727],[5,"String",728],[5,"TypeId",729],[5,"Vec",730],[10,"Fn",731],[5,"Box",732],[5,"Context",191],[5,"SchemaGenerator",733],[6,"Schema",734],[6,"SolverFamily",419],[1,"str"],[5,"Rule",303],[5,"RuleSet",303],[5,"RwLock",735],[5,"Arc",736],[6,"Cow",737],[6,"Error",221],[5,"Error",738],[5,"Error",739],[10,"Error",740],[5,"Metadata",243],[5,"Model",267],[8,"Result",221],[5,"Reduction",303],[8,"ApplicationResult",303],[6,"RewriteError",303],[6,"ApplicationError",303],[5,"HashSet",741],[1,"u8"],[5,"HashMap",742],[17,"Output"],[1,"fn"],[1,"slice"],[10,"SolverAdaptor",419],[5,"SolverStats",666],[5,"SolverFamilyIter",419],[5,"Solver",419],[10,"SolverState",624],[6,"SolverError",419],[5,"Error",725],[1,"usize"],[5,"Init",624],[5,"ModelLoaded",624],[5,"ExecutionSuccess",624],[8,"SolverCallback",419],[5,"SolveSuccess",419],[8,"SolverMutCallback",419],[1,"f64"],[5,"Kissat",568],[5,"Minion",568],[10,"ModelModifier",599],[6,"ModificationFailure",599],[5,"Stats",666],[6,"SearchStatus",419],[6,"SearchComplete",419],[6,"SearchIncomplete",419],[5,"NotModifiable",599],[5,"ExecutionFailure",624]],"b":[[103,"impl-Debug-for-Constant"],[104,"impl-Display-for-Constant"],[107,"impl-Display-for-Expression"],[108,"impl-Debug-for-Expression"],[109,"impl-Display-for-Name"],[110,"impl-Debug-for-Name"],[111,"impl-Debug-for-DecisionVariable"],[112,"impl-Display-for-DecisionVariable"],[231,"impl-Debug-for-Error"],[232,"impl-Display-for-Error"],[234,"impl-From%3CError%3E-for-Error"],[235,"impl-From%3CError%3E-for-Error"],[255,"impl-Display-for-Metadata"],[256,"impl-Debug-for-Metadata"],[340,"impl-Display-for-RewriteError"],[341,"impl-Debug-for-RewriteError"],[342,"impl-Debug-for-ApplicationError"],[343,"impl-Display-for-ApplicationError"],[345,"impl-Debug-for-Rule%3C\'a%3E"],[346,"impl-Display-for-Rule%3C\'a%3E"],[347,"impl-Display-for-RuleSet%3C\'a%3E"],[348,"impl-Debug-for-RuleSet%3C\'a%3E"],[479,"impl-Debug-for-SolverFamily"],[480,"impl-Display-for-SolverFamily"],[482,"impl-Debug-for-SolverError"],[483,"impl-Display-for-SolverError"]]}],\
["conjure_macros",{"doc":"","t":"XQ","n":["register_rule","register_rule_set"],"q":[[0,"conjure_macros"]],"d":["Register a rule with the given rule sets and priorities.","Register a rule set with the given name, priority, and …"],"i":[0,0],"f":"``","c":[],"p":[],"b":[]}],\
["conjure_oxide",{"doc":"","t":"GIPPGPFPFPPPPFFPFPGNNNNNNNNNONNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHNNNNNNNNNNNNNNHOONNNNNNOOONXQCOCNNNNNNNCONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNPPPPPGPFGPGPPPPPPPPPGPPPPGPPPPPPIPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHGIPPPFPGFPFCONNXNNNNHHHHHHHNOOOOOXQHHOOONNNNNXFNNNNNNXNNNNNNNNNHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNMNCNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOCCCCPGPNNNNNNHNHHNNNNNHHHHHHHHHHH","n":["ApplicationError","ApplicationResult","BoundError","Err","Error","JSON","Metadata","Minion","Model","NotImplemented","Ok","Other","Parse","Reduction","Rule","RuleNotApplicable","RuleSet","SAT","SolverFamily","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_constraint","add_constraints","add_variable","application","apply","apply","ast","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","context","default","deserialize","deserialize","deserialize","dirtyclean","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","find_conjure","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","gensym","get_constraints_vec","get_dependencies","get_domain","get_example_model","get_example_model_by_path","get_rule_by_name","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","hash","hash","hash","into","into","into","into","into","into","into","into","iter","json_schema","model_from_json","name","name","new","new","new","new","new","new_empty","new_expression","new_top","order","pure","register_rule","register_rule_set","rule_engine","rule_sets","rules","schema_id","schema_name","serialize","serialize","serialize","set_constraints","set_context","solver","solver_families","source","symbols","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_domain","utils","variables","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","AllDiff","And","Bool","BoolDomain","Bounded","Constant","Constant","DecisionVariable","Domain","Eq","Expression","Geq","Gt","Ineq","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","into","into","into","is_all_diff","is_and","is_constant","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","max_i32","min_i32","min_max_i32","new","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uniplate","vzip","vzip","vzip","vzip","vzip","vzip","conjure_executable","ApplicationError","ApplicationResult","BoundError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","_dependencies","application","borrow","borrow_mut","distributed_slice","fmt","fmt","from","from","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules_vec","into","name","name","new_expression","new_top","order","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_string","try_from","try_into","type_id","vzip","distributed_slice","DistributedSlice","__clone_box","borrow","borrow_mut","clone","clone_into","deref","distributed_slice","from","into","into_iter","static_slice","to_owned","try_from","try_into","type_id","vzip","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","from","get_family","get_family","get_name","init_solver","into","into","into","into","into","into","into","into_iter","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","conjure","json","misc","testing","ConjurePrettyError","EssenceParseError","ParseError","borrow","borrow_mut","fmt","fmt","from","from","get_minion_solutions","into","minion_solutions_to_json","parse_essence_file","to_string","try_from","try_into","type_id","vzip","sort_json_object","sort_json_variables","to_set","assert_eq_any_order","minion_solutions_from_json","read_minion_solutions_json","read_model_json","save_minion_solutions_json","save_model_json","save_stats_json","serialise_model"],"q":[[0,"conjure_oxide"],[209,"conjure_oxide::ast"],[388,"conjure_oxide::find_conjure"],[389,"conjure_oxide::rule_engine"],[434,"conjure_oxide::rule_engine::_dependencies"],[435,"conjure_oxide::rule_engine::_dependencies::linkme"],[452,"conjure_oxide::rules"],[453,"conjure_oxide::solver"],[575,"conjure_oxide::solver::adaptors"],[606,"conjure_oxide::solver::model_modifier"],[631,"conjure_oxide::solver::states"],[673,"conjure_oxide::utils"],[677,"conjure_oxide::utils::conjure"],[695,"conjure_oxide::utils::json"],[697,"conjure_oxide::utils::misc"],[698,"conjure_oxide::utils::testing"],[706,"dyn_clone::sealed"],[707,"alloc::vec"],[708,"core::result"],[709,"serde::de"],[710,"erased_serde::ser"],[711,"erased_serde::ser"],[712,"core::fmt"],[713,"core::fmt"],[714,"serde_json::error"],[715,"std::collections::hash::set"],[716,"core::option"],[717,"std::collections::hash::map"],[718,"core::hash"],[719,"schemars::gen"],[720,"schemars::schema"],[721,"conjure_core::context"],[722,"std::sync::rwlock"],[723,"alloc::sync"],[724,"alloc::borrow"],[725,"alloc::string"],[726,"serde::ser"],[727,"core::error"],[728,"core::any"],[729,"core::clone"],[730,"core::cmp"],[731,"serde::de"],[732,"alloc::boxed"],[733,"anyhow"],[734,"conjure_core::stats::solver_stats"],[735,"conjure_core::solver::private"],[736,"core::fmt"],[737,"core::cmp"]],"d":["","The result of applying a rule to an expression. Contains …","","Contains the error value","","","","","","","Contains the success value","","","The result of applying a rule to an expression.","A rule with a name, application function, and rule sets.","","A set of rules with a name, priority, and dependencies.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns an arbitrary variable name that is not in the …","","Get the dependencies of this rule set, evaluating them …","","Searches recursively in <code>../tests/integration</code> folder for an …","Searches for an <code>.essence</code> file at the given filepath, then …","Get a rule by name. Returns the rule with the given name …","Get a rule set by name. Returns the rule set with the …","Get all rule sets Returns a <code>Vec</code> of static references to …","Get all rule sets for a given solver family. Returns a <code>Vec</code> …","Returns a copied <code>Vec</code> of all rules registered with the …","Get the rules of this rule set, evaluating them lazily if …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The name of the rule set.","","","","","","","","","Order of the RuleSet. Used to establish a consistent order …","Represents a reduction with no side effects on the model.","Register a rule with the given rule sets and priorities.","Register a rule set with the given name, priority, and …","","","","","","","","","","","A high-level API for interacting with constraints solvers.","The solver families that this rule set applies to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the dependencies of this rule set, including itself","Represents a reduction that also modifies the symbol table.","Represents a reduction that also adds a top-level …","<strong>Supported by:</strong> Minion.","<strong>Supported by:</strong> JsonInput, SAT.","","","","","<strong>Supported by:</strong> Minion, JsonInput.","","","<strong>Supported by:</strong> JsonInput.","Compatability","<strong>Supported by:</strong> JsonInput.","<strong>Supported by:</strong> JsonInput.","<strong>Supported by:</strong> Minion.","","","<strong>Supported by:</strong> JsonInput.","<strong>Supported by:</strong> JsonInput.","","<strong>Supported by:</strong> JsonInput.","","<strong>Supported by:</strong> JsonInput.","<strong>Supported by:</strong> JsonInput, SAT.","Represents an empty expressionNB: we only expect this at …","<strong>Supported by:</strong> JsonInput, SAT.","","<strong>Supported by:</strong> Minion, JsonInput, SAT.","","<strong>Supported by:</strong> Minion, JsonInput.","","<strong>Supported by:</strong> Minion.","<strong>Supported by:</strong> Minion.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this <code>Expression</code> a <code>AllDiff</code>?","Is this <code>Expression</code> a <code>And</code>?","Is this <code>Expression</code> a <code>Constant</code>?","Is this <code>Expression</code> a <code>Eq</code>?","Is this <code>Expression</code> a <code>Geq</code>?","Is this <code>Expression</code> a <code>Gt</code>?","Is this <code>Expression</code> a <code>Ineq</code>?","Is this <code>Expression</code> a <code>Leq</code>?","Is this <code>Expression</code> a <code>Lt</code>?","Is this <code>Expression</code> a <code>Min</code>?","Is this <code>Expression</code> a <code>Neq</code>?","Is this <code>Expression</code> a <code>Not</code>?","Is this <code>Expression</code> a <code>Nothing</code>?","Is this <code>Expression</code> a <code>Or</code>?","Is this <code>Expression</code> a <code>Reference</code>?","Is this <code>Expression</code> a <code>Sum</code>?","Is this <code>Expression</code> a <code>SumEq</code>?","Is this <code>Expression</code> a <code>SumGeq</code>?","Is this <code>Expression</code> a <code>SumLeq</code>?","Returns the maximum i32 value a variable of the domain can …","Returns the minimum i32 value a variable of the domain can …","Returns the minimum and maximum integer values a variable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if the conjure executable is present in PATH and if …","","The result of applying a rule to an expression. Contains …","","Contains the error value","Contains the success value","The result of applying a rule to an expression.","","","A rule with a name, application function, and rule sets.","","A set of rules with a name, priority, and dependencies.","","","","","","","","Returns the argument unchanged.","","Get a rule by name. Returns the rule with the given name …","Convert a list of rule sets into a final map of rules to …","Get a rule set by name. Returns the rule set with the …","Get all rule sets Returns a <code>Vec</code> of static references to …","Get all rule sets for a given solver family. Returns a <code>Vec</code> …","Returns a copied <code>Vec</code> of all rules registered with the …","Get a final ordering of rules based on their priorities …","Calls <code>U::from(self)</code>.","","The name of the rule set.","","","Order of the RuleSet. Used to establish a consistent order …","Register a rule with the given rule sets and priorities.","Register a rule set with the given name, priority, and …","Resolves the final set of rule sets to apply based on …","Rewrites the model by applying the rules to all …","","The solver families that this rule set applies to.","","","","","","","","Collection of static elements that are gathered into a …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Retrieve a contiguous slice containing all the elements …","","","","","","Simplify an expression to a constant if possible Returns: …","The search was complete (i.e. the solver found all …","","The search was incomplete (i.e. it was terminated before …","","","","","","","","","","","","","","Returned from SolverAdaptor when solving is successful.","An abstract representation of a constraints solver.","A common interface for calling underlying solver APIs …","The type for user-defined callbacks for use with Solver.","Errors returned by Solver on failure.","","An iterator over the variants of SolverFamily","","","","","","","Solver adaptors.","Adds the solver adaptor name and family (if they exist) to …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the solver family that this solver adaptor belongs to","","Gets the name of the solver adaptor for pretty printing.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Modifying a model during search.","","","","","","","Runs the solver on the given model.","","Runs the solver on the given model, allowing modification …","","States of a <code>Solver</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A SolverAdaptor for interacting with the Kissat SAT solver.","A SolverAdaptor for interacting with Minion.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An unspecified error has occurred.","A ModelModifier provides an interface to modify a model …","The requested modification to the model has failed.","A <code>ModelModifier</code> for a solver that does not support …","The desired operation is supported by this solver adaptor, …","The desired operation is not supported for this solver …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","The state returned by <code>Solver</code> if solving has not been …","The state returned by <code>Solver</code> if solving has been …","","","","Cannot construct this from outside this module.","Cannot construct this from outside this module.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Execution statistics.","The status of the search","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Recursively sorts the keys of all JSON objects within the …","Sort the “variables” field by name. We have to do this …","","","","","","","","",""],"i":[0,0,10,83,0,20,0,14,0,20,83,20,20,0,0,10,0,14,0,12,3,8,9,13,14,3,3,3,9,8,9,0,20,12,3,10,8,9,13,14,20,12,3,10,8,9,13,14,12,3,8,9,13,14,12,3,8,9,13,14,3,3,12,12,3,14,12,12,3,14,12,3,9,13,14,12,3,14,0,20,20,12,12,3,10,10,8,9,9,13,13,14,14,20,20,20,12,3,10,8,9,13,14,14,3,3,13,3,0,0,0,0,0,0,0,13,9,13,14,20,12,3,10,8,9,13,14,14,14,0,9,13,12,3,8,9,13,3,8,8,13,8,0,0,0,9,0,14,14,12,3,14,3,3,0,13,20,8,12,3,8,9,13,14,20,12,10,9,13,14,20,12,3,10,8,9,13,14,14,20,12,3,10,8,9,13,14,20,12,3,10,8,9,13,14,3,0,3,20,12,3,10,8,9,13,14,13,8,8,4,4,48,27,49,0,4,0,0,4,0,4,4,4,48,27,4,4,6,4,0,4,4,4,4,0,4,49,4,4,4,4,0,6,48,49,27,4,6,7,48,49,27,4,6,7,48,49,27,4,6,7,4,48,49,27,4,6,7,48,49,27,4,6,7,6,48,49,27,4,6,7,48,49,27,4,6,7,7,48,49,27,4,6,7,48,49,27,4,6,7,48,48,49,27,4,4,6,6,7,7,48,49,27,4,6,7,6,48,49,27,4,6,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,27,27,27,7,6,48,49,27,4,6,7,48,49,27,4,6,7,48,4,6,7,48,49,27,4,6,7,48,49,27,4,6,7,48,49,27,4,6,7,4,48,49,27,4,6,7,0,0,0,10,83,83,0,59,0,0,10,0,0,9,59,59,0,59,59,59,59,0,0,0,0,0,0,0,59,9,13,8,8,13,0,0,0,0,9,13,8,59,59,59,59,59,0,0,61,61,61,61,61,61,0,61,61,61,61,61,61,61,61,61,0,84,85,84,14,66,66,66,85,66,66,66,66,14,0,0,0,0,0,0,0,0,0,0,0,86,86,32,64,66,0,62,71,84,86,85,32,64,66,71,84,86,85,32,64,66,32,64,66,32,64,66,32,66,66,71,84,86,85,32,64,66,62,64,62,62,71,84,86,85,32,64,66,32,32,62,64,0,64,32,32,32,64,32,62,64,62,64,0,64,32,64,66,66,71,84,86,85,32,64,66,71,84,86,85,32,64,66,71,84,86,85,32,64,66,71,84,86,85,32,64,66,64,0,0,73,74,73,74,73,74,73,74,73,74,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,73,74,76,76,0,0,0,76,76,75,75,87,76,87,76,87,76,87,76,87,76,87,76,87,76,87,76,0,0,0,0,0,70,88,89,69,70,88,89,69,70,88,89,69,70,88,89,69,70,88,70,70,89,69,70,88,89,69,70,88,89,69,70,88,89,69,70,88,88,0,0,0,0,77,0,77,77,77,77,77,77,77,0,77,0,0,77,77,77,77,77,0,0,0,0,0,0,0,0,0,0,0],"f":"```````````````````{{cb}d{}}00000{{fh}d}{{f{j{h}}}d}{{fln}d}`{{A`f}d}{{Abhf}{{Af{A`Ad}}}}`{ce{}{}}000000000000000{AhAh}{ff}{A`A`}{AbAb}{AjAj}{AlAl}{{ce}d{}{}}00000``{{}Ah}{c{{Af{Ah}}}An}{c{{Af{f}}}An}{c{{Af{Al}}}An}`{{cB`}{{Af{dBb}}}{}}00{{AhAh}Bd}{{ff}Bd}{{AbAb}Bd}{{AjAj}Bd}{{AlAl}Bd}{{cB`}{{Af{dBf}}}{}}00`{{BhBj}{{Af{dBl}}}}0{{AhBj}{{Af{dBl}}}}0{{fBj}{{Af{dBl}}}}{{AdBj}{{Af{dBl}}}}0{{A`Bj}{{Af{dBl}}}}{{AbBj}{{Af{dBl}}}}0{{AjBj}{{Af{dBl}}}}0{{AlBj}{{Af{dBl}}}}0{cc{}}{BnBh}{C`Bh}2222222{Cb{{Af{Al}}}}{fl}{f{{j{h}}}}{Aj{{Cd{Aj}}}}{{fl}{{Ch{Cf}}}}{Cb{{Af{fBn}}}}0{Cb{{Ch{Ab}}}}{Cb{{Ch{Aj}}}}{{}{{j{Aj}}}}{Al{{j{Aj}}}}{{}{{j{Ab}}}}{Aj{{Cl{AbCj}}}}{{Abc}dCn}{{Ajc}dCn}{{Alc}dCn}{ce{}{}}0000000{{}D`}{DbDd}{{Cb{Dj{{Dh{Df}}}}}{{Af{fBh}}}}``{{}Ah}{{{Cl{ln}}h{Dj{{Dh{Df}}}}}f}{{hh{Cl{ln}}}A`}{{Cb{Dn{hf}{{Dl{{Af{A`Ad}}}}}}{Eb{{E`{CbCj}}}}}Ab}{{CbCj{Eb{Cb}}{Eb{Al}}}Aj}{{{Dj{{Dh{Df}}}}}f}```{hA`}`````{{}{{Ed{Cb}}}}{{}Ef}{{Ahc}AfEh}{{fc}AfEh}{{Alc}AfEh}{{f{j{h}}}d}{{f{Dj{{Dh{Df}}}}}d}``{Bh{{Ch{Ej}}}}`{ce{}{}}00000{cEf{}}00000{c{{Af{e}}}{}{}}000000{Cb{{Af{Al}}}}111111111{cEl{}}0000000{{flCf}d}``55555555{Aj{{Cd{Aj}}}}{{h{Cl{ln}}}A`}{{hh}A`}``````````````````````````````````{{cb}d{}}00000999999999999{{h{Cl{ln}}}{{Ch{{E`{EnEn}}}}}}{F`F`}{{{Fb{c}}}{{Fb{c}}}Fd}{CfCf}{hh}{ll}{nn}{{ce}d{}{}}00000{{ll}Ff}{c{{Af{F`}}}An}{c{{Af{{Fb{e}}}}}AnFh}{c{{Af{Cf}}}An}{c{{Af{h}}}An}{c{{Af{l}}}An}{c{{Af{n}}}An}{{cB`}{{Af{dBb}}}{}}00000`{{F`F`}Bd}{{{Fb{c}}{Fb{c}}}BdFj}{{CfCf}Bd}{{hh}Bd}{{ll}Bd}{{nn}Bd}{{cB`}{{Af{dBf}}}{}}00000{{F`Bj}{{Af{dBl}}}}0{{{Fb{c}}Bj}{{Af{dBl}}}Fl}{{CfBj}{{Af{dBl}}}}{{hBj}{{Af{dBl}}}}0{{lBj}{{Af{dBl}}}}0{{nBj}{{Af{dBl}}}}0{cc{}}00000{{lc}dCn}{ce{}{}}00000{hBd}000000000000000000{Cf{{Ch{En}}}}0{Cf{{Ch{{E`{EnEn}}}}}}{Cfn}{{ll}{{Ch{Ff}}}}{{F`c}AfEh}{{{Fb{c}}e}AfFnEh}{{Cfc}AfEh}{{hc}AfEh}{{lc}AfEh}{{nc}AfEh};;;;;;{cEf{}}000{c{{Af{e}}}{}{}}00000000000{cEl{}}00000{h{{E`{{j{h}}{Gb{G`}}}}}}??????{{}{{Gd{d}}}}`````````````{ce{}{}}0`{{GfBj}{{Af{dBl}}}}0{cc{}}{GhGf}{Cb{{Ch{Ab}}}}{{{j{Aj}}}{{Af{{Cl{AbCj}}Gh}}}}{Cb{{Ch{Aj}}}}{{}{{j{Aj}}}}{Al{{j{Aj}}}}{{}{{j{Ab}}}}{{{Cl{AbCj}}}{{j{Ab}}}}:```````{{Al{j{Cb}}}{{Af{{j{Aj}}Gh}}}}{{f{j{Aj}}}{{Af{fGf}}}}```{cEf{}}{c{{Af{e}}}{}{}}0{cEl{}}?``{{cb}d{}}{ce{}{}}0{{{Gj{{Eb{c}}}}}{{Gj{{Eb{c}}}}}{}}{{ce}d{}{}}{{{Gj{{Eb{c}}}}}{}{}}`{cc{}}41{{{Gj{{Eb{c}}}}}{{Eb{c}}}{}}58875{h{{Ch{F`}}}}``````````````````````````777`{{GlGn}Gn}77777777777777{D`D`}{{{H`{ce}}}{{H`{ce}}}{FdGl}{FdHb}}{HdHd}888{{D`Bj}{{Af{dBl}}}}{{HdBj}{{Af{dBl}}}}08888888{GlAl}{{{H`{c}}}AlGl}{Gl{{Ch{Ef}}}}{{GlHf}d}{ce{}{}}0000000{D`Hh}{{GlfHf}{{Af{dHd}}}}{{{H`{c}}f}{{Af{{H`{cHj}}Hd}}}Gl}`{c{{H`{c}}}Gl}{D`Ch}0{{D`Hh}Ch}{{{H`{cHl}}}dGl}{D`{{E`{Hh{Ch{Hh}}}}}}{{Gl{Gb{G`}}Hf}{{Af{HnHd}}}}{{{H`{cHj}}{Gb{G`}}}{{Af{{H`{cHl}}Hd}}}Gl}10`{{{H`{cHl}}}GnGl};;;{cEf{}}{c{{Af{e}}}{}{}}0000000000000{cEl{}}000000>>>>>>>{{{H`{cHl}}}I`Gl}``????{{}Ib}{{}Id}{cc{}}0{IbAl}{IdAl}{Id{{Ch{Ef}}}}{ce{}{}}0{{IbfHf}{{Af{dHd}}}}{{IdfHf}{{Af{dHd}}}}87{{Ib{Gb{G`}}Hf}{{Af{HnHd}}}}{{Id{Gb{G`}}Hf}{{Af{HnHd}}}}10====<<44```````{{Ifh}{{Af{dIh}}}}{{IflCf}{{Af{dIh}}}}6666::66????>>66```````66666666::::6666``????????>>>>6666````````66{{IjBj}Il}0;{BhIj}{f{{Af{{j{{Cl{lF`}}}}Bn}}}}9{{{j{{Cl{lF`}}}}}In}{{CbCb{Dj{{Dh{Df}}}}}{{Af{fIj}}}}{cEf{}}{c{{Af{e}}}{}{}}0{cEl{}}>{{InBd}In}{InIn}{{{j{c}}}{{Cd{c}}}{J`JbFlFd}}{{{j{{j{c}}}}{j{{j{c}}}}}d{J`JbFlFd}}{Cb{{Af{{j{{Cl{lF`}}}}Bn}}}}{{CbCbCb}{{Af{InBn}}}}{{CbCbCbCb}{{Af{fJd}}}}{{{j{{Cl{lF`}}}}CbCbBd}{{Af{InJd}}}}{{fCbCbCbBd}{{Af{dJd}}}}{{{Dj{{Dh{Df}}}}CbCb}{{Af{dJd}}}}{f{{Af{EfC`}}}}","c":[],"p":[[5,"Private",706],[1,"unit"],[5,"Model",0],[6,"Expression",209],[5,"Vec",707],[6,"Name",209],[5,"DecisionVariable",209],[5,"Reduction",0],[5,"Rule",0],[6,"ApplicationError",0],[6,"Result",708],[5,"Metadata",0],[5,"RuleSet",0],[6,"SolverFamily",0],[10,"Deserializer",709],[10,"Serializer",710],[6,"ErrorImpl",710],[1,"bool"],[5,"Error",711],[6,"Error",0],[5,"Formatter",712],[5,"Error",712],[5,"Error",713],[5,"Error",714],[1,"str"],[5,"HashSet",715],[6,"Domain",209],[6,"Option",716],[1,"u8"],[5,"HashMap",717],[10,"Hasher",718],[5,"SolverFamilyIter",453],[5,"SchemaGenerator",719],[6,"Schema",720],[5,"Context",721],[5,"RwLock",722],[5,"Arc",723],[17,"Output"],[1,"fn"],[1,"tuple"],[1,"slice"],[6,"Cow",724],[5,"String",725],[10,"Serializer",726],[10,"Error",727],[5,"TypeId",728],[1,"i32"],[6,"Constant",209],[6,"Range",209],[10,"Clone",729],[6,"Ordering",730],[10,"Deserialize",709],[10,"PartialEq",730],[10,"Debug",712],[10,"Serialize",726],[10,"Fn",731],[5,"Box",732],[8,"Result",713],[6,"RewriteError",389],[6,"ResolveRulesError",733],[5,"DistributedSlice",435],[10,"SolverAdaptor",453],[5,"SolverStats",734],[5,"Solver",453],[10,"SolverState",631],[6,"SolverError",453],[5,"Internal",735],[1,"usize"],[5,"ModelLoaded",631],[5,"ExecutionSuccess",631],[5,"SolveSuccess",453],[1,"f64"],[5,"Kissat",575],[5,"Minion",575],[10,"ModelModifier",606],[6,"ModificationFailure",606],[6,"EssenceParseError",677],[8,"Result",712],[6,"Value",736],[10,"Eq",730],[10,"Hash",718],[5,"Error",737],[8,"ApplicationResult",0],[6,"SearchStatus",453],[6,"SearchComplete",453],[6,"SearchIncomplete",453],[5,"NotModifiable",606],[5,"ExecutionFailure",631],[5,"Init",631]],"b":[[79,"impl-Debug-for-Error"],[80,"impl-Display-for-Error"],[81,"impl-Debug-for-Metadata"],[82,"impl-Display-for-Metadata"],[84,"impl-Display-for-ApplicationError"],[85,"impl-Debug-for-ApplicationError"],[87,"impl-Debug-for-Rule%3C\'a%3E"],[88,"impl-Display-for-Rule%3C\'a%3E"],[89,"impl-Debug-for-RuleSet%3C\'a%3E"],[90,"impl-Display-for-RuleSet%3C\'a%3E"],[91,"impl-Debug-for-SolverFamily"],[92,"impl-Display-for-SolverFamily"],[94,"impl-From%3CError%3E-for-Error"],[95,"impl-From%3CError%3E-for-Error"],[300,"impl-Display-for-Constant"],[301,"impl-Debug-for-Constant"],[304,"impl-Debug-for-Expression"],[305,"impl-Display-for-Expression"],[306,"impl-Debug-for-Name"],[307,"impl-Display-for-Name"],[308,"impl-Display-for-DecisionVariable"],[309,"impl-Debug-for-DecisionVariable"],[405,"impl-Debug-for-RewriteError"],[406,"impl-Display-for-RewriteError"],[505,"impl-Debug-for-SolverError"],[506,"impl-Display-for-SolverError"],[682,"impl-Display-for-EssenceParseError"],[683,"impl-Debug-for-EssenceParseError"]]}],\
["enum_compatability_macro",{"doc":"A macro to document enum variants with the things that …","t":"X","n":["document_compatibility"],"q":[[0,"enum_compatability_macro"]],"d":["A macro to document enum variants by the things that they …"],"i":[0],"f":"`","c":[],"p":[],"b":[]}],\
["minion_rs",{"doc":"This crate provides low level Rust bindings to the Minion …","t":"ICCHHPPPPPPPPGPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPFPIIGGIPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNPGPPGPPNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Callback","ast","error","get_from_table","run_minion","Abs","AllDiff","AllDiffMatrix","Bool","Bool","Bound","CheckAssign","CheckGsa","Constant","ConstantAsVar","Constraint","Difference","DisEq","Discrete","Div","DivUndefZero","Element","ElementOne","ElementUndefZero","Eq","ForwardChecking","FrameUpdate","GacAllDiff","GacEq","GacSchema","Gcc","GccWeak","Hamming","Ineq","Integer","LexLeq","LexLeqQuick","LexLeqRv","LexLess","LexLessQuick","LightTable","LitSumGeq","Max","Mddc","Min","MinusEq","Model","Modulo","ModuloUndefZero","NameRef","NegativeMddc","NegativeTable","NotHamming","NvalueGeq","NvalueLeq","Occurrence","OccurrenceGeq","OccurrenceLeq","Pow","Product","Reify","ReifyImply","ReifyImplyQuick","SparseBound","Str2Plus","SumGeq","SumLeq","SymbolTable","Table","Tuple","TwoVars","Var","VarDomain","VarName","WInIntervalSet","WInRange","WInset","WLiteral","WNotInRange","WNotInset","WNotLiteral","WatchElement","WatchElementOne","WatchElementOneUndefZero","WatchElementUndefZero","WatchLess","WatchNeq","WatchSumGeq","WatchSumLeq","WatchVecExistsLess","WatchVecNeq","WatchedAnd","WatchedOr","WeightedSumGeq","WeightedSumLeq","add_var","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","contains","default","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_variable_order","get_vartype","into","into","into","into","into","into","named_variables","new","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","InvalidInstance","MinionError","NotImplemented","Other","RuntimeError","RuntimeError","UnknownError","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"minion_rs"],[5,"minion_rs::ast"],[175,"minion_rs::error"],[207,"alloc::string"],[208,"core::option"],[209,"core::result"],[210,"core::fmt"],[211,"core::fmt"],[212,"core::any"],[213,"anyhow"],[214,"core::error"]],"d":["The callback function used to capture results from Minion …","Types used for representing Minion models in Rust.","Error types.","Gets a given value from Minion’s TableOut (where it …","Run Minion on the given Model.","","","","","","","","","Representation of a Minion constant.","","All supported Minion constraints.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Minion model.","","","","","","","","","","","","","","","","","","","","","Stores all named variables in a Minion model alongside …","","","","Representation of a Minion Variable.","Representation of variable domains.","","","","","","","","","","","","","","","","","","","","","","","Creates a new variable and adds it to the symbol table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the canonical ordering of variables.","Gets the domain of a named variable.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates an empty Minion model.","","","","","","","","","","","","","","","","","","","","","","","","","The model given to Minion is invalid.","Wraps all error types returned by <code>minion_rs</code>.","The input model uses Minion features that are not yet …","Catch-all error.","Errors thrown by Minion during execution.","An error has occurred during the execution of Minion.","An unknown error has occurred.","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,11,11,11,13,10,10,11,11,0,12,0,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,0,11,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,8,3,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,8,8,3,11,12,13,10,8,3,3,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,19,0,6,6,0,6,19,6,19,6,19,19,6,6,19,19,6,6,6,19,19,6,19,6,6,19,6,19,6,19,6,19],"f":"```{b{{d{b}}}}{{fh}{{n{jl}}}}``````````````````````````````````````````````````````````````````````````````````````````{{A`AbAd}{{d{j}}}}{ce{}{}}00000000000{ff}{AfAf}{AhAh}{AjAj}{AdAd}{A`A`}{{ce}j{}{}}00000`{{A`Ab}Al}{{}f}{{ff}Al}{{AfAf}Al}{{AhAh}Al}{{AjAj}Al}{{AdAd}Al}{{A`A`}Al}{{fAn}B`}{{AfAn}B`}{{AhAn}B`}{{AjAn}B`}{{AdAn}B`}{{A`An}B`}{cc{}}00000{A`{{Bb{Ab}}}}{{A`Ab}{{d{Ad}}}}{ce{}{}}00000`{{}f}111111{c{{n{e}}}{}{}}00000000000{cBd{}}00000```````3333{{BfBf}Al}{{lAn}B`}0{{BfAn}B`}09{Bfl}{Bhl}{BjBf}<99{l{{d{Bl}}}}{cb{}}0999988","c":[],"p":[[5,"String",207],[6,"Option",208],[5,"Model",5],[8,"Callback",0],[1,"unit"],[6,"MinionError",175],[6,"Result",209],[5,"SymbolTable",5],[8,"VarName",5],[6,"VarDomain",5],[6,"Constraint",5],[6,"Var",5],[6,"Constant",5],[1,"bool"],[5,"Formatter",210],[8,"Result",210],[5,"Vec",211],[5,"TypeId",212],[6,"RuntimeError",175],[5,"Error",213],[1,"u32"],[10,"Error",214]],"b":[[187,"impl-Display-for-MinionError"],[188,"impl-Debug-for-MinionError"],[189,"impl-Display-for-RuntimeError"],[190,"impl-Debug-for-RuntimeError"],[192,"impl-From%3CRuntimeError%3E-for-MinionError"],[193,"impl-From%3CError%3E-for-MinionError"]]}],\
["uniplate",{"doc":"A port of Haskell’s Uniplate in Rust.","t":"PPGPCNNNNNNNNNNNNNNNCNKEKMNNNNNNNNMNNNKGPNNNNNNNNNNNNNNNNNMNNN","n":["Many","One","Tree","Zero","biplate","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","into_iter","list","map","to_owned","try_from","try_into","type_id","uniplate","vzip","Biplate","Tree","Uniplate","biplate","cata","children","children_bi","descend","descend_bi","rewrite","transform","transform_bi","uniplate","universe","universe_bi","with_children","Uniplate","UniplateError","WrongNumberOfChildren","borrow","borrow_mut","children","descend","eq","fmt","fmt","fold","from","into","one_holed_context","rewrite","to_string","transform","try_from","try_into","type_id","uniplate","universe","vzip","with_children"],"q":[[0,"uniplate"],[22,"uniplate::biplate"],[38,"uniplate::uniplate"],[62,"core::clone"],[63,"core::marker"],[64,"core::cmp"],[65,"core::cmp"],[66,"core::fmt"],[67,"core::ops::function"],[68,"alloc::boxed"],[69,"alloc::sync"],[70,"core::result"],[71,"core::any"],[72,"alloc::vec"],[73,"core::option"],[74,"alloc::string"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns the tree as a list alongside a function to …","","","","","","","","","","","Returns all the top most children of type to within from.","Performs a fold-like computation on each value.","Gets the direct children (maximal substructures) of a node.","Returns the children of a type. If to == from then it …","","Like descend but with more general types.","Rewrites by applying a rule everywhere it can.","Applies the given rule to all nodes bottom up.","","","Gest all children of a node, including itself and all …","","Reconstructs the node with the given children.","","","","","","Get the DIRECT children of a node.","Perform a transformation on all the immediate children, …","","","","Perform a fold-like computation on each value.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get the nth one holed context.","Rewrite by applying a rule everywhere you can.","","Apply the given rule to all nodes bottom up.","","","","The <code>uniplate</code> function. Takes a node and produces a tuple …","Get all children of a node, including itself and all …","","Reconstruct this node with the given children"],"i":[1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,18,19,19,18,19,18,19,19,18,19,19,18,19,0,0,24,24,24,20,20,24,24,24,20,24,24,20,20,24,20,24,24,24,20,20,24,20],"f":"`````{ce{}{}}0{{{b{c}}}{{b{c}}}{dfdh}}{{ce}j{}{}}{{{b{c}}{b{c}}}l{nfdh}}{{{b{c}}A`}Ab{Adfdh}}{cc{}}5{{{b{c}}}e{fdh}{}}{{{b{c}}}{{Al{{Af{c}}{Aj{Ah}}}}}{fdh}}{{{b{c}}{An{Ah}}}{{b{c}}}{fdh}}8{c{{B`{e}}}{}{}}0{cBb{}}`:```{Bd{{Al{{b{c}}{Aj{Ah}}}}}{fdhBf}}{{Bf{An{Ah}}}c{}}{Bf{{Af{Bf}}}}{Bd{{Af{c}}}{fdhBf}}{{Bf{An{Ah}}}Bf}{{Bd{An{Ah}}}Bd}110{Bf{{Al{{b{Bf}}{Aj{Ah}}}}}}43{{Bf{Af{Bf}}}Bf}```{ce{}{}}0{Bh{{Bj{Bh}}}}{{Bh{Bn{Bh}{{Bl{Bh}}}}}{{B`{BhC`}}}}{{C`C`}l}{{C`A`}Ab}0{{Bh{Bn{Bh{Bj{c}}}{{Bl{c}}}}}c{}}{cc{}}6{{BhCb}{{Cd{{Aj{Ah}}}}}}{{Bh{Bn{Bh}{{Bl{{Cd{Bh}}}}}}}{{B`{BhC`}}}}{cCf{}}7{c{{B`{e}}}{}{}}0{cBb{}}{Bh{{Al{{Bj{Bh}}{Aj{Ah}}}}}};<{{Bh{Bj{Bh}}}{{B`{BhC`}}}}","c":[],"p":[[6,"Tree",0],[10,"Clone",62],[10,"Sized",63],[10,"Eq",64],[1,"unit"],[1,"bool"],[10,"PartialEq",64],[5,"Formatter",65],[8,"Result",65],[10,"Debug",65],[5,"Vector",66],[10,"Fn",67],[5,"Box",68],[1,"tuple"],[5,"Arc",69],[6,"Result",70],[5,"TypeId",71],[10,"Biplate",22],[10,"Uniplate",22],[10,"Uniplate",38],[5,"Vec",72],[17,"Output"],[1,"fn"],[6,"UniplateError",38],[1,"usize"],[6,"Option",73],[5,"String",74]],"b":[[46,"impl-Display-for-UniplateError"],[47,"impl-Debug-for-UniplateError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
