var searchIndex = new Map(JSON.parse('[\
["chuffed_rs",{"t":"CCFHHHFFFHISSSSFFFHFHHHIIHHFSSHFHHHHHHHHHHHFISSSSSFFFUFFFISSSSSSSSFISSSSSSSSSSSSSSSSISSSSSFFOOOOOOOOOOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHONNOONNNHNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNHNOOONHNNNNNNNNNNNNNNNNNNNNNNONHOOOONNNNNHHHHOHHHNNOOOOOOOOOONNNNNNNNNOOONHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOHFOONOHHHHHHH","n":["bindings","wrappers","BoolView","BoolView_attach","BoolView_detach","BoolView_getScore","Branching","Branching__bindgen_vtable","Clause","Clause_debug","ConLevel","ConLevel_CL_BND","ConLevel_CL_DEF","ConLevel_CL_DOM","ConLevel_CL_VAL","DecInfo","DummyProblem","IntVar","IntVar_IntVar","IntVar_PropInfo","IntVar_allowSet","IntVar_attach","IntVar_branch","IntVar_const_iterator","IntVar_const_reverse_iterator","IntVar_getScore","IntVar_initVals","IntVar_iterator","IntVar_max_limit","IntVar_min_limit","IntVar_remVal","IntVar_reverse_iterator","IntVar_setMax","IntVar_setMin","IntVar_setVal","IntVar_simplifyWatches","IntVar_specialiseToEL","IntVar_specialiseToLL","IntVar_specialiseToSL","IntVar_updateFixed","IntVar_updateMax","IntVar_updateMin","IntVar_wakePropagators","Lit","PreferredVal","PreferredVal_PV_MAX","PreferredVal_PV_MEDIAN","PreferredVal_PV_MIN","PreferredVal_PV_SPLIT_MAX","PreferredVal_PV_SPLIT_MIN","Propagator","Propagator__bindgen_vtable","Reason","Reason__bindgen_ty_1","Reason__bindgen_ty_1__bindgen_ty_1","Tchar","Tint","ValBranch","ValBranch_VAL_DEFAULT","ValBranch_VAL_MAX","ValBranch_VAL_MEDIAN","ValBranch_VAL_MIDDLE","ValBranch_VAL_MIN","ValBranch_VAL_RANDOM","ValBranch_VAL_SPLIT_MAX","ValBranch_VAL_SPLIT_MIN","Var","VarBranch","VarBranch_VAR_ACTIVITY","VarBranch_VAR_DEFAULT","VarBranch_VAR_DEGREE_MAX","VarBranch_VAR_DEGREE_MIN","VarBranch_VAR_INORDER","VarBranch_VAR_MAX_MAX","VarBranch_VAR_MAX_MIN","VarBranch_VAR_MIN_MAX","VarBranch_VAR_MIN_MIN","VarBranch_VAR_PSEUDO_COST","VarBranch_VAR_RANDOM","VarBranch_VAR_REDUCED_COST","VarBranch_VAR_REGRET_MAX_MAX","VarBranch_VAR_REGRET_MIN_MAX","VarBranch_VAR_SIZE_MAX","VarBranch_VAR_SIZE_MIN","VarType","VarType_BOOL_VAR","VarType_INT_VAR","VarType_INT_VAR_EL","VarType_INT_VAR_LL","VarType_INT_VAR_SL","__BindgenBitfieldUnit","__IncompleteArrayField","__bindgen_anon_1","_base","_base","_base","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_phantom_0","a","activity","all_different","all_in_scip","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch_IntVar","callback","cap","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","createVar","createVars","createVars1","createVars2","createVars3","d","d1","d2","data","data","debug","default","default","destroy_vec_intvar","detach","eflags","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_bit","get_idx","hash","in_queue","in_queue","in_scip","initVals","int_plus","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","last_solution_value","learnt","make_vec_intvar","max","max0","min","min0","new","new","new","new_bitfield_1","new_bitfield_1","new_dummy_problem","new_xyz_problem","output_vars","output_vars1","p","p_addVars","p_print","p_setcallback","padding","partial_cmp","pinfo","pos","preferred_val","priority","prop_id","pt","s","satisfied","sbps_value_selection","searchVars","set","set_bit","set_d1","set_d2","set_learnt","set_padding","set_sz","set_temp_expl","set_type","shadow_val","should_be_decidable","should_be_learnable","simplifyWatches","solve_xyz","specialiseToEL","specialiseToLL","specialiseToSL","sz","sz","temp_expl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updateFixed","updateMax","updateMin","v","v","v","val","val","val","vals","var","var","var","var_id","var_sym_break","vec","vtable_","vtable_","wakePropagators","x","all_different_wrapper","branch_wrapper","create_var","create_vars","int_plus_wrapper","output_vars_wrapper","var_sym_break_wrapper"],"q":[[0,"chuffed_rs"],[2,"chuffed_rs::bindings"],[429,"chuffed_rs::wrappers"],[436,"std::os::raw"],[437,"core::clone"],[438,"core::cmp"],[439,"core::cmp"],[440,"core::cmp"],[441,"core::fmt"],[442,"core::convert"],[443,"core::hash"],[444,"core::cmp"],[445,"core::any"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,33,4,34,25,17,25,17,32,16,34,0,34,1,1,1,1,4,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,0,0,21,32,34,8,10,11,12,13,14,15,16,17,18,19,20,21,8,10,11,12,13,14,15,16,17,18,19,20,21,8,0,0,0,0,0,16,17,17,32,25,25,8,1,0,4,18,8,8,1,32,10,11,12,13,14,25,17,5,33,4,34,18,19,20,21,52,20,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,8,8,0,8,5,34,34,34,0,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,25,0,34,34,34,34,8,1,34,25,17,0,0,0,0,18,0,0,0,25,8,34,18,34,5,5,16,4,5,34,21,8,8,17,17,25,25,25,25,17,34,34,34,34,0,34,34,34,25,32,25,8,10,11,12,13,14,15,16,17,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,17,12,50,51,8,1,32,10,11,12,13,14,25,15,16,17,5,33,4,34,18,19,20,21,34,34,34,10,11,4,53,12,19,34,53,12,19,34,0,0,13,5,34,14,0,0,0,0,0,0,0],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}}{}{}}{{{b{c}}d}{{f{c}}}{}}10{{hjll}n}{ce{}{}}0000000000000000000000000000000000000000000`````{{{A`{c}}}{{A`{c}}}Ab}{AdAd}{AfAf}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{BbBb}{BdBd}{BfBf}{BhBh}{BjBj}{{ce}n{}{}}000000000000{{{A`{c}}{A`{c}}}BlBn}``````{BbC`}0``{Cbn}{{}{{A`{c}}}Cd}{{}{{b{c}}}Cd}`{{hjll}n}`{{{A`{c}}{A`{c}}}CfCh}{{{A`{c}}Cj}ClCn}{{{b{c}}Cj}Cl{}}{{{D`{c}}Cj}ClCn}{{AdCj}Cl}{{AfCj}Cl}{{AhCj}Cl}{{AjCj}Cl}{{AlCj}Cl}{{CbCj}Cl}{{BbCj}Cl}{{jCj}Cl}{{DbCj}Cl}{{hCj}Cl}{{DdCj}Cl}{{BdCj}Cl}{{BfCj}Cl}{{BhCj}Cl}{{BjCj}Cl}``{cc{}}000000000000000000000{{{A`{c}}dDf}Dh{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{{A`{c}}d}Cf{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}`{{{A`{c}}e}nDnE`}```{{DdCf}n}`{ce{}{}}000000000000000000000`{CbC`}`````{c{{A`{c}}}{}}{{}{{b{c}}}{}}{{ll}Dd}{{C`C`C`C`}{{A`{{Eb{Df}}}}}}{{C`C`C`}{{A`{{Eb{Df}}}}}}````````5{{{A`{c}}{A`{c}}}{{Ed{Bl}}}Ef}``````````{{{A`{c}}dDfDh}n{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{{A`{c}}dCf}n{{Dj{{f{Df}}}}{Dl{{f{Df}}}}}}{{BbC`}n}0{{CbC`}n}0001```{Ddl}`{Ddn}0{{DdD`}n}=`=>>>>>>>>>>>>>{c{{Eh{e}}}{}{}}0000000000000000000000000000000000000000000{BbC`}`{cEj{}}000000000000000000000444```````````````4`{{D`El}n}{{D`EnF`}n}{{FbFbCf}Dd}{{FbFbFbCf}D`}{{DdDdDd}n}{D`n}0","D":"Eh","p":[[5,"__IncompleteArrayField",2],[1,"usize"],[1,"slice"],[5,"BoolView",2],[5,"Propagator",2],[8,"c_int",436],[1,"unit"],[5,"__BindgenBitfieldUnit",2],[10,"Clone",437],[5,"Tchar",2],[5,"Tint",2],[5,"DecInfo",2],[5,"Branching",2],[5,"Lit",2],[5,"Reason",2],[20,"Reason__bindgen_ty_1",2],[5,"Reason__bindgen_ty_1__bindgen_ty_1",2],[5,"IntVar_PropInfo",2],[5,"IntVar_iterator",2],[5,"IntVar_reverse_iterator",2],[5,"DummyProblem",2],[6,"Ordering",438],[10,"Ord",438],[8,"c_uint",436],[5,"Clause",2],[10,"Default",439],[1,"bool"],[10,"PartialEq",438],[5,"Formatter",440],[8,"Result",440],[10,"Debug",440],[5,"vec",2],[5,"Var",2],[5,"IntVar",2],[1,"u8"],[1,"u64"],[10,"AsRef",441],[10,"AsMut",441],[10,"Hash",442],[10,"Hasher",442],[1,"array"],[6,"Option",443],[10,"PartialOrd",438],[6,"Result",444],[5,"TypeId",445],[8,"ConLevel",2],[8,"VarBranch",2],[8,"ValBranch",2],[1,"i32"],[5,"Branching__bindgen_vtable",2],[5,"Propagator__bindgen_vtable",2],[8,"IntVar_const_reverse_iterator",2],[8,"IntVar_const_iterator",2]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIgBAwAAAN8A9gAIABUBnwA="}],\
["conjure_core",{"t":"ECDCCCCCCCCCPPPPPPPGPFPGPGPPPPPPPPPPGPPPPGPGPPPPPPIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNOONNNNNNOONNNOONNNNNPGPPPPPINNNNNNNNNNNNNNFNNNONNNNNNNNNNNNNNNNNNNFNNNNNNNNOONNNNNNNNNNNNNNNNNNNNONHHHGIPPPFPGFPFNNNCONNNNNNNNNNNNNNNNNNXNNNNNNNNNNNNNNNNNHHHHHHNHNNNNNNNOONNNOOONXQHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXEHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNCNNNNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOFFFNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNOOOOOOOONNNNNNNNNOOONNNNNNNNNNNNNNNN","n":["Model","ast","conjure_core","context","error","metadata","model","parse","rule_engine","rules","solver","stats","AllDiff","And","Bool","Bool","BoolDomain","Bounded","Bubble","Constant","Constant","DecisionVariable","DivEq","Domain","Eq","Expression","Geq","Gt","Ineq","Int","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","ReturnType","SafeDiv","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UnsafeDiv","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","apply_i32","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_undefined","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","domain_of","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","is_all_diff","is_and","is_bubble","is_clean","is_constant","is_div_eq","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_safe_div","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","is_unsafe_div","new","partial_cmp","return_type","serialize","serialize","serialize","serialize","serialize","serialize","set_clean","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniplate","values_i32","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Context","__clone_box","borrow","borrow_mut","clone","clone_into","default","do_erased_serialize","eq","erased_serialize","extra_rule_set_names","file_name","fmt","from","into","json_schema","new","new_ptr","rule_sets","rules","schema_id","schema_name","serialize","stats","target_solver_family","to_owned","try_from","try_into","type_id","vzip","Err","Error","JSON","NotImplemented","Ok","Other","Parse","Result","borrow","borrow_mut","fmt","fmt","from","from","from","into","source","to_string","try_from","try_into","type_id","vzip","Metadata","__clone_box","borrow","borrow_mut","clean","clone","clone_into","default","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","from","into","new","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Model","__clone_box","add_constraint","add_constraints","add_variable","borrow","borrow_mut","clone","clone_into","constraints","context","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","gensym","get_constraints_vec","get_domain","into","new","new_empty","serialize","set_constraints","set_context","to_owned","try_from","try_into","type_id","update_domain","variables","vzip","get_example_model","get_example_model_by_path","model_from_json","ApplicationError","ApplicationResult","DomainError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","__clone_box","__clone_box","__clone_box","_dependencies","application","apply","apply","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","distributed_slice","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_dependencies","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","get_rules_vec","hash","hash","into","into","into","into","into","name","name","new","new","new","new_expression","new_top","order","pure","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","distributed_slice","linkme","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_family","get_family","get_name","hash","init_solver","into","into","into","into","into","into","into","into","into_iter","iter","json_schema","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","schema_id","schema_name","serialize","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","RewriterStats","SolverStats","Stats","__clone_box","__clone_box","__clone_box","add_rewriter_run","add_solver_run","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","conjure_solver_wall_time_s","default","default","default","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","from","from","from","into","into","into","is_optimization_enabled","json_schema","json_schema","json_schema","new","nodes","rewriter_rule_application_attempts","rewriter_rule_applications","rewriter_run_time","rewriter_runs","sat_clauses","sat_vars","satisfiable","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","serialize","serialize","serialize","solver_adaptor","solver_family","solver_runs","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_timings"],"q":[[0,"conjure_core"],[12,"conjure_core::ast"],[223,"conjure_core::context"],[253,"conjure_core::error"],[275,"conjure_core::metadata"],[299,"conjure_core::model"],[332,"conjure_core::parse"],[335,"conjure_core::rule_engine"],[448,"conjure_core::rule_engine::_dependencies"],[450,"conjure_core::rules"],[451,"conjure_core::solver"],[600,"conjure_core::solver::adaptors"],[631,"conjure_core::solver::model_modifier"],[656,"conjure_core::solver::states"],[698,"conjure_core::stats"],[775,"dyn_clone::sealed"],[776,"core::option"],[777,"core::cmp"],[778,"core::clone"],[779,"core::cmp"],[780,"serde::de"],[781,"serde::de"],[782,"erased_serde::ser"],[783,"core::fmt"],[784,"core::fmt"],[785,"serde::ser"],[786,"serde::ser"],[787,"core::any"],[788,"alloc::vec"],[789,"core::ops::function"],[790,"alloc::boxed"],[791,"schemars::gen"],[792,"schemars::schema"],[793,"std::sync::rwlock"],[794,"alloc::sync"],[795,"alloc::borrow"],[796,"anyhow"],[797,"serde_json::error"],[798,"core::error"],[799,"std::collections::hash::set"],[800,"std::collections::hash::map"],[801,"core::fmt"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,8,8,10,15,3,11,8,0,8,0,8,0,8,0,8,8,8,10,15,3,8,8,14,8,0,8,8,8,8,0,8,0,8,11,8,8,8,8,0,8,14,10,11,3,8,14,15,16,3,10,11,3,8,14,15,16,10,11,3,8,14,15,16,8,10,11,3,8,14,15,16,10,11,3,8,14,15,16,14,10,11,3,8,14,16,10,11,3,8,14,16,16,8,10,11,3,8,14,15,16,10,11,3,8,14,16,10,10,11,3,8,8,14,14,15,16,16,10,10,10,11,3,8,8,8,14,15,16,14,10,11,3,8,14,15,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,14,8,10,11,3,8,14,16,8,10,11,3,8,14,15,16,10,8,14,16,10,11,3,8,14,15,16,10,11,3,8,14,15,16,10,11,3,8,14,15,16,8,3,10,11,3,8,14,15,16,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,54,0,48,48,54,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,58,56,56,0,57,0,0,58,0,55,42,43,0,42,55,42,57,58,55,42,43,57,58,55,42,43,55,42,43,55,42,43,0,42,43,57,57,58,58,55,42,42,43,43,57,58,55,42,43,43,0,0,0,0,0,0,43,0,42,43,57,58,55,42,43,42,43,55,42,43,55,55,43,55,0,0,0,0,42,43,55,55,42,43,57,58,42,43,57,58,55,42,43,57,58,55,42,43,57,58,55,42,43,57,58,55,42,43,43,55,55,0,0,0,84,85,84,41,68,68,68,85,68,68,68,68,41,0,0,0,0,0,0,0,0,0,0,0,86,86,41,65,66,68,0,63,75,84,86,85,41,65,66,68,75,84,86,85,41,65,66,68,41,65,66,68,41,65,66,68,41,41,41,41,41,41,65,68,68,75,84,86,85,41,65,66,68,41,63,66,63,41,63,75,84,86,85,41,65,66,68,65,41,41,65,63,66,0,66,65,65,65,66,41,41,41,65,63,66,63,66,0,66,41,65,66,68,41,68,75,84,86,85,41,41,65,66,68,75,84,86,85,41,65,66,68,75,84,86,85,41,65,66,68,75,84,86,85,41,65,66,68,66,0,0,78,79,78,79,78,79,78,79,78,79,79,78,79,78,79,78,79,78,79,78,79,78,79,78,79,78,79,78,79,81,81,0,0,0,81,81,80,80,87,81,87,81,87,81,87,81,87,81,87,81,87,81,87,81,0,0,0,0,0,73,88,71,72,73,88,71,72,73,88,71,72,73,88,71,72,73,88,73,73,71,72,73,88,71,72,73,88,71,72,73,88,71,72,73,88,88,0,0,0,83,64,82,82,82,83,64,82,83,64,82,83,64,82,83,64,82,64,83,64,82,83,64,82,83,64,82,83,64,82,83,64,82,83,83,64,82,82,64,83,83,83,82,64,64,64,83,64,82,83,64,82,83,64,82,64,64,82,83,64,82,83,64,82,83,64,82,83,64,82,83,64,82,64],"f":"`````````````````````````````````````````````````````{{cb}d{}}000000{{f{n{hh}{{j{{l{h}}}}}}f}{{l{f}}}}{ce{}{}}0000000000000{A`Ab}{AdAd}{{{Af{c}}}{{Af{c}}}{AhAj}}{ff}{A`A`}{AlAl}{AnAn}{B`B`}{{ce}d{}{}}000000{{AlAl}Bb}{c{{Bd{Ad}}}Bf}{c{{Bd{{Af{e}}}}}Bf{AhBh}}{c{{Bd{f}}}Bf}{c{{Bd{A`}}}Bf}{c{{Bd{Al}}}Bf}{c{{Bd{B`}}}Bf}{{cBj}{{Bd{dBl}}}{}}00000`{{A`Bn}{{l{f}}}}{{AdAd}Ab}{{{Af{c}}{Af{c}}}Ab{AhC`}}{{ff}Ab}{{A`A`}Ab}{{AlAl}Ab}{{AnAn}Ab}{{B`B`}Ab}{{cBj}{{Bd{dCb}}}{}}00000{{AdCd}Cf}0{{{Af{c}}Cd}Cf{AhCh}}{{fCd}Cf}{{A`Cd}Cf}0{{AlCd}Cf}0{{AnCd}Cf}{{B`Cd}Cf}0{hAd}{cc{}}{AbAd}111{AbA`}{hA`}333{{Alc}dCj}{ce{}{}}000000{A`Ab}00000000000000000000000{fB`}{{AlAl}{{l{Bb}}}}{A`{{l{An}}}}{{Adc}BdCl}{{{Af{c}}e}Bd{AhCn}Cl}{{fc}BdCl}{{A`c}BdCl}{{Alc}BdCl}{{B`c}BdCl}{{A`Ab}d};;;;;;;{cD`{}}000{c{{Bd{e}}}{}{}}0000000000000{cDb{}}000000{A`{{Dj{{Dd{A`}}{Dh{Df}}}}}}{f{{l{{Dd{h}}}}}}{ce{}{}}000000`{{cb}d{}}11{DlDl}{{ce}d{}{}}{{}Dl}{{cBj}{{Bd{dBl}}}{}}{{DlDl}Ab}{{cBj}{{Bd{dCb}}}{}}``{{DlCd}Cf}{cc{}}9{DnE`}{{Eb{Dd{D`}}{Dd{Ed}}{Dd{Ef}}}Dl}{{Eb{Dd{D`}}{Dd{Ed}}{Dd{Ef}}}{{Ej{{Eh{Dl}}}}}}``{{}{{En{El}}}}{{}D`}{{Dlc}BdCl}``?{c{{Bd{e}}}{}{}}0{cDb{}}{ce{}{}}````````00{{F`Cd}Cf}0{FbF`};{FdF`}3{F`{{l{Ff}}}}{cD`{}}7765`{{cb}d{}}66`{FhFh}{{ce}d{}{}}{{}Fh}{c{{Bd{Fh}}}Bf}{{cBj}{{Bd{dBl}}}{}}{{FhFh}Ab}{{cBj}{{Bd{dCb}}}{}}{{FhCd}Cf}0{cc{}}?6{{Fhc}BdCl}{ce{}{}}<{c{{Bd{e}}}{}{}}0{cDb{}}2`={{FjA`}d}{{Fj{Dd{A`}}}d}{{FjAlB`}d}55{FjFj}?``{c{{Bd{Fj}}}Bf}={{FjFj}Ab}<{{FjCd}Cf};{FjAl}{Fj{{Dd{A`}}}}{{FjAl}{{l{f}}}}<{{BnA`{Ej{{Eh{Dl}}}}}Fj}{{{Ej{{Eh{Dl}}}}}Fj}{{Fjc}BdCl};{{Fj{Ej{{Eh{Dl}}}}}d}{ce{}{}}{c{{Bd{e}}}{}{}}0{cDb{}}{{FjAlf}d}`3{El{{Bd{FjFb}}}}0{{El{Ej{{Eh{Dl}}}}}{{Fl{Fj}}}}```````````{{cb}d{}}00``{{FnFj}d}{{EdA`Fj}G`}8888888888{FnFn}{EdEd}{EfEf}{{ce}d{}{}}00`{{EdEd}Ab}{{EfEf}Ab}{{GbCd}Cf}0{{GdCd}Cf}0{{FnCd}Cf}{{EdCd}Cf}0{{EfCd}Cf}0{cc{}}0000{Ef{{Gf{Ef}}}}{El{{l{Ed}}}}{{{Dd{Ef}}}{{Bd{{Gj{EdGh}}`}}}}{El{{l{Ef}}}}{{}{{Dd{Ef}}}}{Eb{{Dd{Ef}}}}{{}{{Dd{Ed}}}}{Ef{{Gj{EdGh}}}}{{{Gj{EdGh}}}{{Dd{Ed}}}}{{Edc}dCj}{{Efc}dCj}{ce{}{}}0000``{{A`A`Bn}Fn}{{El{n{A`Fj}{{j{G`}}}}{Gl{{Dj{ElGh}}}}}Ed}{{ElGh{Gl{El}}{Gl{Eb}}}Ef}```{A`Fn}``{{Eb{Dd{D`}}}{{Bd{{Dd{Ef}}`}}}}{{Fj{Dd{Ef}}}{{Bd{FjGb}}}}```666{cD`{}}000{c{{Bd{e}}}{}{}}000000000{cDb{}}000099999{Ef{{Gf{Ef}}}}{{A`Bn}Fn}{{A`A`}Fn}``{A`{{l{Ad}}}}``````````````````````````{{cb}d{}}000`{{GnH`}H`}????????????????{EbEb}{HbHb}{{{Hd{ce}}}{{Hd{ce}}}{AjGn}{AjHf}}{HhHh}{{ce}d{}{}}000{c{{Bd{Eb}}}Bf}{{cBj}{{Bd{dBl}}}{}}{{EbEb}Ab}{{cBj}{{Bd{dCb}}}{}}{{EbCd}{{Bd{dHj}}}}{{EbCd}Cf}{{HbCd}Cf}{{HhCd}Cf}0{cc{}}0000000{El{{Bd{Ebc}}}{}}{GnEb}{{{Hd{c}}}EbGn}{Gn{{l{D`}}}}{{Ebc}dCj}`{ce{}{}}00000000{{}Hb}{DnE`}{HbHl}`{{{Hd{cHn}}Fj}{{Bd{{Hd{cI`}}Hh}}}Gn}`{c{{Hd{c}}}Gn}{Hb{{l{c}}}{}}0{{HbHl}{{l{c}}}{}}{{{Hd{cIb}}}dGn}{{}{{En{El}}}}{{}D`}{{Ebc}BdCl}{Hb{{Dj{Hl{l{Hl}}}}}}`{{{Hd{cI`}}Id}{{Bd{{Hd{cIb}}Hh}}}Gn}`{{{Hd{cI`}}Ih}{{Bd{{Hd{cIb}}Hh}}}Gn}`{{{Hd{cIb}}}H`Gn}????{cD`{}}0{c{{Bd{e}}}{}{}}000{El{{Bd{Ebc}}}{}}111111111111{cDb{}}0000000{ce{}{}}0000000{{{Hd{cIb}}}IjGn}``1111{{}Il}{{}In}{cc{}}0{IlEb}{InEb}{In{{l{D`}}}}77``54````::::8877```````{{J`A`}{{Bd{dJb}}}}{{J`Alf}{{Bd{dJb}}}}99995599<<<<::99```````9999999955559999``<<<<<<<<::::9999````{{cb}d{}}00{{JdJf}d}{{JdH`}d}<<<<<<{JfJf}{H`H`}{JdJd}{{ce}d{}{}}00`{{}Jf}{{}H`}{{}Jd}{{cBj}{{Bd{dBl}}}{}}00{{cBj}{{Bd{dCb}}}{}}00{cc{}}00{ce{}{}}00`{DnE`}005````````{{}{{En{El}}}}00{{}D`}00{{Jfc}BdCl}{{H`c}BdCl}{{Jdc}BdCl}```666{c{{Bd{e}}}{}{}}00000{cDb{}}00888{{H`Ij}H`}","D":"AGd","p":[[5,"Private",775],[1,"unit"],[6,"Domain",12],[1,"i32"],[17,"Output"],[6,"Option",776],[1,"fn"],[6,"Expression",12],[1,"bool"],[6,"Constant",12],[6,"Range",12],[10,"Ord",777],[10,"Clone",778],[6,"Name",12],[6,"ReturnType",12],[5,"DecisionVariable",12],[6,"Ordering",777],[6,"Result",779],[10,"Deserializer",780],[10,"Deserialize",780],[10,"Serializer",781],[6,"ErrorImpl",781],[8,"SymbolTable",12],[10,"PartialEq",777],[5,"Error",782],[5,"Formatter",783],[8,"Result",783],[10,"Debug",783],[10,"Hasher",784],[10,"Serializer",785],[10,"Serialize",785],[5,"String",786],[5,"TypeId",787],[5,"Vec",788],[10,"Fn",789],[5,"Box",790],[1,"tuple"],[5,"Context",223],[5,"SchemaGenerator",791],[6,"Schema",792],[6,"SolverFamily",451],[5,"Rule",335],[5,"RuleSet",335],[5,"RwLock",793],[5,"Arc",794],[1,"str"],[6,"Cow",795],[6,"Error",253],[5,"Error",796],[5,"Error",797],[10,"Error",798],[5,"Metadata",275],[5,"Model",299],[8,"Result",253],[5,"Reduction",335],[8,"ApplicationResult",335],[6,"RewriteError",335],[6,"ApplicationError",335],[5,"HashSet",799],[1,"u8"],[5,"HashMap",800],[1,"slice"],[10,"SolverAdaptor",451],[5,"SolverStats",698],[5,"SolverFamilyIter",451],[5,"Solver",451],[10,"SolverState",656],[6,"SolverError",451],[5,"Error",783],[1,"usize"],[5,"Init",656],[5,"ModelLoaded",656],[5,"ExecutionSuccess",656],[8,"SolverCallback",451],[5,"SolveSuccess",451],[8,"SolverMutCallback",451],[1,"f64"],[5,"Kissat",600],[5,"Minion",600],[10,"ModelModifier",631],[6,"ModificationFailure",631],[5,"Stats",698],[5,"RewriterStats",698],[6,"SearchStatus",451],[6,"SearchComplete",451],[6,"SearchIncomplete",451],[5,"NotModifiable",631],[5,"ExecutionFailure",656]],"b":[[118,"impl-Display-for-Constant"],[119,"impl-Debug-for-Constant"],[122,"impl-Debug-for-Expression"],[123,"impl-Display-for-Expression"],[124,"impl-Display-for-Name"],[125,"impl-Debug-for-Name"],[127,"impl-Debug-for-DecisionVariable"],[128,"impl-Display-for-DecisionVariable"],[129,"impl-From%3Ci32%3E-for-Constant"],[131,"impl-From%3Cbool%3E-for-Constant"],[135,"impl-From%3Cbool%3E-for-Expression"],[136,"impl-From%3Ci32%3E-for-Expression"],[263,"impl-Debug-for-Error"],[264,"impl-Display-for-Error"],[265,"impl-From%3CError%3E-for-Error"],[267,"impl-From%3CError%3E-for-Error"],[287,"impl-Debug-for-Metadata"],[288,"impl-Display-for-Metadata"],[372,"impl-Display-for-RewriteError"],[373,"impl-Debug-for-RewriteError"],[374,"impl-Display-for-ApplicationError"],[375,"impl-Debug-for-ApplicationError"],[377,"impl-Debug-for-Rule%3C\'a%3E"],[378,"impl-Display-for-Rule%3C\'a%3E"],[379,"impl-Display-for-RuleSet%3C\'a%3E"],[380,"impl-Debug-for-RuleSet%3C\'a%3E"],[511,"impl-Display-for-SolverFamily"],[512,"impl-Debug-for-SolverFamily"],[514,"impl-Display-for-SolverError"],[515,"impl-Debug-for-SolverError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE0CQwAAAAQABgAEAAwAAAAPAAMAFAAAABYAAAAYAAAAHgACACMAAAAlAAAAKgAAACwAAAAuAAAAMAAAADMAAAA1AAcAPgAqAGoAGACEAAAAiAABAI0AAACYAAAArQAqANkAEwDvAA4A/wACAAMBBwAMAQAADgETACQBFwA+AQEAQQELAE8BAQBSAQAAVgEBAFkBAABbASIAjAEBAJMBAACVAQQAoAEAAKIBGwDBAQEAxQEAAMcBDADZAQAA2wEGAOQBIAANAgAADwIAABECAQAbAgUAIgIIACwCAAAuAgAAMAIoAFsCBQBjAgIAaAIQAH8CBQCJAgcAkwICAJgCBwCqAiQA0AIIAN8CFQD3AhAA"}],\
["conjure_macros",{"t":"XQ","n":["register_rule","register_rule_set"],"q":[[0,"conjure_macros"]],"i":[0,0],"f":"``","D":"d","p":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["conjure_oxide",{"t":"GIPPGPFPFPPPPFFPFPGNNNNNNNNNONNCNNNNNNNNNNNNNNNNONNNNNNNNNNNNOONNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHNNNNNNNNNNNNNNHOONNNNNNOOONXQCOCNNNNNNNCONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNPPPPPPPGPFPGPGPPPPPPPPPPGPPPPGPGPPPPPPIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHGIPPPFPGFPFCONNXNNNNHHHHHHHNOOOOOXQHHOOONNNNNXFNNNNNNXNNNNNNNNNHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNMNCNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOCCCCPGPNNNNNNHNHHNNNNNHHHHHHHHHHH","n":["ApplicationError","ApplicationResult","DomainError","Err","Error","JSON","Metadata","Minion","Model","NotImplemented","Ok","Other","Parse","Reduction","Rule","RuleNotApplicable","RuleSet","SAT","SolverFamily","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_constraint","add_constraints","add_variable","application","apply","apply","ast","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","context","default","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","find_conjure","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","gensym","get_constraints_vec","get_dependencies","get_domain","get_example_model","get_example_model_by_path","get_rule_by_name","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","hash","hash","hash","into","into","into","into","into","into","into","into","iter","json_schema","model_from_json","name","name","new","new","new","new","new","new_empty","new_expression","new_top","order","pure","register_rule","register_rule_set","rule_engine","rule_sets","rules","schema_id","schema_name","serialize","serialize","serialize","set_constraints","set_context","solver","solver_families","source","symbols","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_domain","utils","variables","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","AllDiff","And","Bool","Bool","BoolDomain","Bounded","Bubble","Constant","Constant","DecisionVariable","DivEq","Domain","Eq","Expression","Geq","Gt","Ineq","Int","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","ReturnType","SafeDiv","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UnsafeDiv","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","apply_i32","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_undefined","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","domain_of","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","is_all_diff","is_and","is_bubble","is_clean","is_constant","is_div_eq","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_safe_div","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","is_unsafe_div","new","partial_cmp","return_type","serialize","serialize","serialize","serialize","serialize","serialize","set_clean","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniplate","values_i32","vzip","vzip","vzip","vzip","vzip","vzip","vzip","conjure_executable","ApplicationError","ApplicationResult","DomainError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","_dependencies","application","borrow","borrow_mut","distributed_slice","fmt","fmt","from","from","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules_vec","into","name","name","new_expression","new_top","order","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_string","try_from","try_into","type_id","vzip","distributed_slice","DistributedSlice","__clone_box","borrow","borrow_mut","clone","clone_into","deref","distributed_slice","from","into","into_iter","static_slice","to_owned","try_from","try_into","type_id","vzip","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","from","get_family","get_family","get_name","init_solver","into","into","into","into","into","into","into","into_iter","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","conjure","json","misc","testing","ConjurePrettyError","EssenceParseError","ParseError","borrow","borrow_mut","fmt","fmt","from","from","get_minion_solutions","into","minion_solutions_to_json","parse_essence_file","to_string","try_from","try_into","type_id","vzip","sort_json_object","sort_json_variables","to_set","assert_eq_any_order","minion_solutions_from_json","read_minion_solutions_json","read_model_json","save_minion_solutions_json","save_model_json","save_stats_json","serialise_model"],"q":[[0,"conjure_oxide"],[209,"conjure_oxide::ast"],[420,"conjure_oxide::find_conjure"],[421,"conjure_oxide::rule_engine"],[466,"conjure_oxide::rule_engine::_dependencies"],[467,"conjure_oxide::rule_engine::_dependencies::linkme"],[484,"conjure_oxide::rules"],[485,"conjure_oxide::solver"],[607,"conjure_oxide::solver::adaptors"],[638,"conjure_oxide::solver::model_modifier"],[663,"conjure_oxide::solver::states"],[705,"conjure_oxide::utils"],[709,"conjure_oxide::utils::conjure"],[727,"conjure_oxide::utils::json"],[729,"conjure_oxide::utils::misc"],[730,"conjure_oxide::utils::testing"],[738,"dyn_clone::sealed"],[739,"alloc::vec"],[740,"core::result"],[741,"serde::de"],[742,"erased_serde::ser"],[743,"erased_serde::ser"],[744,"core::fmt"],[745,"core::fmt"],[746,"anyhow"],[747,"std::collections::hash::set"],[748,"core::option"],[749,"std::collections::hash::map"],[750,"core::hash"],[751,"schemars::gen"],[752,"schemars::schema"],[753,"conjure_core::context"],[754,"std::sync::rwlock"],[755,"alloc::sync"],[756,"alloc::borrow"],[757,"alloc::string"],[758,"serde::ser"],[759,"core::error"],[760,"core::any"],[761,"core::clone"],[762,"core::cmp"],[763,"core::cmp"],[764,"alloc::boxed"],[765,"anyhow"],[766,"conjure_core::stats::solver_stats"],[767,"conjure_core::solver::private"],[768,"core::fmt"],[769,"core::cmp"]],"i":[0,0,10,85,0,20,0,14,0,20,85,20,20,0,0,10,0,14,0,12,3,8,9,13,14,3,3,3,9,8,9,0,20,12,3,10,8,9,13,14,20,12,3,10,8,9,13,14,12,12,3,8,9,13,14,12,3,8,9,13,14,3,3,12,12,3,14,12,3,14,12,3,9,13,14,12,3,14,0,20,20,12,12,3,10,10,8,9,9,13,13,14,14,20,20,20,12,3,10,8,9,13,14,14,3,3,13,3,0,0,0,0,0,0,0,13,9,13,14,20,12,3,10,8,9,13,14,14,14,0,9,13,12,3,8,9,13,3,8,8,13,8,0,0,0,9,0,14,14,12,3,14,3,3,0,13,20,8,12,3,8,9,13,14,20,12,10,9,13,14,20,12,3,10,8,9,13,14,14,20,12,3,10,8,9,13,14,20,12,3,10,8,9,13,14,3,0,3,20,12,3,10,8,9,13,14,13,8,8,4,4,48,52,27,49,4,0,4,0,4,0,4,0,4,4,4,48,52,27,4,4,6,4,0,4,4,4,4,0,4,0,4,49,4,4,4,4,0,4,6,48,49,27,4,6,52,7,27,48,49,27,4,6,52,7,48,49,27,4,6,52,7,4,48,49,27,4,6,52,7,48,49,27,4,6,52,7,6,48,49,27,4,6,7,48,49,27,4,6,7,7,4,48,49,27,4,6,52,7,48,49,27,4,6,7,48,48,49,27,4,4,6,6,52,7,7,48,48,48,49,27,4,4,4,6,52,7,6,48,49,27,4,6,52,7,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,7,6,4,48,49,27,4,6,7,4,48,49,27,4,6,52,7,48,4,6,7,48,49,27,4,6,52,7,48,49,27,4,6,52,7,48,49,27,4,6,52,7,4,27,48,49,27,4,6,52,7,0,0,0,10,85,85,0,61,0,0,10,0,0,9,61,61,0,61,61,61,61,0,0,0,0,0,0,0,61,9,13,8,8,13,0,0,0,0,9,13,8,61,61,61,61,61,0,0,63,63,63,63,63,63,0,63,63,63,63,63,63,63,63,63,0,86,87,86,14,68,68,68,87,68,68,68,68,14,0,0,0,0,0,0,0,0,0,0,0,88,88,32,66,68,0,64,73,86,88,87,32,66,68,73,86,88,87,32,66,68,32,66,68,32,66,68,32,68,68,73,86,88,87,32,66,68,64,66,64,64,73,86,88,87,32,66,68,32,32,64,66,0,66,32,32,32,66,32,64,66,64,66,0,66,32,66,68,68,73,86,88,87,32,66,68,73,86,88,87,32,66,68,73,86,88,87,32,66,68,73,86,88,87,32,66,68,66,0,0,75,76,75,76,75,76,75,76,75,76,76,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,76,75,76,78,78,0,0,0,78,78,77,77,89,78,89,78,89,78,89,78,89,78,89,78,89,78,89,78,0,0,0,0,0,72,90,91,71,72,90,91,71,72,90,91,71,72,90,91,71,72,90,72,72,91,71,72,90,91,71,72,90,91,71,72,90,91,71,72,90,90,0,0,0,0,79,0,79,79,79,79,79,79,79,0,79,0,0,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0],"f":"```````````````````{{cb}d{}}00000{{fh}d}{{f{j{h}}}d}{{fln}d}`{{A`f}d}{{Abhf}{{Af{A`Ad}}}}`{ce{}{}}000000000000000`{AhAh}{ff}{A`A`}{AbAb}{AjAj}{AlAl}{{ce}d{}{}}00000``{{}Ah}{c{{Af{Ah}}}An}{c{{Af{f}}}An}{c{{Af{Al}}}An}{{cB`}{{Af{dBb}}}{}}00{{AhAh}Bd}{{ff}Bd}{{AbAb}Bd}{{AjAj}Bd}{{AlAl}Bd}{{cB`}{{Af{dBf}}}{}}00`{{BhBj}{{Af{dBl}}}}0{{AhBj}{{Af{dBl}}}}0{{fBj}{{Af{dBl}}}}{{AdBj}{{Af{dBl}}}}0{{A`Bj}{{Af{dBl}}}}{{AbBj}{{Af{dBl}}}}0{{AjBj}{{Af{dBl}}}}0{{AlBj}{{Af{dBl}}}}0{BnBh}{C`Bh}{cc{}}0000000{Cb{{Af{Al}}}}{fl}{f{{j{h}}}}{Aj{{Cd{Aj}}}}{{fl}{{Ch{Cf}}}}{Cb{{Af{fC`}}}}0{Cb{{Ch{Ab}}}}{Cb{{Ch{Aj}}}}{{}{{j{Aj}}}}{Al{{j{Aj}}}}{{}{{j{Ab}}}}{Aj{{Cl{AbCj}}}}{{Abc}dCn}{{Ajc}dCn}{{Alc}dCn}{ce{}{}}0000000{{}D`}{DbDd}{{Cb{Dj{{Dh{Df}}}}}{{Af{fBh}}}}``{{}Ah}{{{Cl{ln}}h{Dj{{Dh{Df}}}}}f}{{hh{Cl{ln}}}A`}{{Cb{Dn{hf}{{Dl{{Af{A`Ad}}}}}}{Eb{{E`{CbCj}}}}}Ab}{{CbCj{Eb{Cb}}{Eb{Al}}}Aj}{{{Dj{{Dh{Df}}}}}f}```{hA`}`````{{}{{Ed{Cb}}}}{{}Ef}{{Ahc}AfEh}{{fc}AfEh}{{Alc}AfEh}{{f{j{h}}}d}{{f{Dj{{Dh{Df}}}}}d}``{Bh{{Ch{Ej}}}}`{ce{}{}}00000{cEf{}}00000{c{{Af{e}}}{}{}}000000{Cb{{Af{Al}}}}111111111{cEl{}}0000000{{flCf}d}``55555555{Aj{{Cd{Aj}}}}{{h{Cl{ln}}}A`}{{hh}A`}`````````````````````````````````````````{{cb}d{}}000000{{Cf{Dn{EnEn}{{Dl{{Ch{En}}}}}}Cf}{{Ch{Cf}}}}::::::::::::::{hBd}{F`F`}{{{Fb{c}}}{{Fb{c}}}{FdFf}}{CfCf}{hh}{ll}{FhFh}{nn}{{ce}d{}{}}000000{{ll}Fj}{c{{Af{F`}}}An}{c{{Af{{Fb{e}}}}}An{FfFl}}{c{{Af{Cf}}}An}{c{{Af{h}}}An}{c{{Af{l}}}An}{c{{Af{n}}}An}{{cB`}{{Af{dBb}}}{}}00000`{{h{Cl{ln}}}{{Ch{Cf}}}}{{F`F`}Bd}{{{Fb{c}}{Fb{c}}}Bd{FnFf}}{{CfCf}Bd}{{hh}Bd}{{ll}Bd}{{FhFh}Bd}{{nn}Bd}{{cB`}{{Af{dBf}}}{}}00000{{F`Bj}{{Af{dBl}}}}0{{{Fb{c}}Bj}{{Af{dBl}}}{G`Ff}}{{CfBj}{{Af{dBl}}}}{{hBj}{{Af{dBl}}}}0{{lBj}{{Af{dBl}}}}0{{FhBj}{{Af{dBl}}}}{{nBj}{{Af{dBl}}}}0{cc{}}{BdF`}{EnF`}22{Enh}3{Bdh}444{{lc}dCn}{ce{}{}}000000{hBd}00000000000000000000000{Cfn}{{ll}{{Ch{Fj}}}}{h{{Ch{Fh}}}}{{F`c}AfEh}{{{Fb{c}}e}Af{FfGb}Eh}{{Cfc}AfEh}{{hc}AfEh}{{lc}AfEh}{{nc}AfEh}{{hBd}d};;;;;;;{cEf{}}000{c{{Af{e}}}{}{}}0000000000000{cEl{}}000000{h{{E`{{j{h}}{Gf{Gd}}}}}}{Cf{{Ch{{j{En}}}}}}{ce{}{}}000000{{}{{Gh{d}}}}`````````````11`{{GjBj}{{Af{dBl}}}}0{cc{}}{GlGj}{Cb{{Ch{Ab}}}}{{{j{Aj}}}{{Af{{Cl{AbCj}}Gl}}}}{Cb{{Ch{Aj}}}}{{}{{j{Aj}}}}{Al{{j{Aj}}}}{{}{{j{Ab}}}}{{{Cl{AbCj}}}{{j{Ab}}}};```````{{Al{j{Ef}}}{{Af{{j{Aj}}Gl}}}}{{f{j{Aj}}}{{Af{fGj}}}}```{cEf{}}{c{{Af{e}}}{}{}}0{cEl{}}{ce{}{}}``{{cb}d{}}11{{{Gn{{Eb{c}}}}}{{Gn{{Eb{c}}}}}{}}{{ce}d{}{}}{{{Gn{{Eb{c}}}}}{}{}}`{cc{}}51{{{Gn{{Eb{c}}}}}{{Eb{c}}}{}}68876{h{{Ch{F`}}}}``````````````````````````666`{{H`Hb}Hb}88888888888888{D`D`}{{{Hd{ce}}}{{Hd{ce}}}{FdH`}{FdHf}}{HhHh}888{{D`Bj}{{Af{dBl}}}}{{HhBj}{{Af{dBl}}}}08888888{H`Al}{{{Hd{c}}}AlH`}{H`{{Ch{Ef}}}}{{H`Hj}d}{ce{}{}}0000000{D`Hl}{{H`fHj}{{Af{dHh}}}}{{{Hd{c}}f}{{Af{{Hd{cHn}}Hh}}}H`}`{c{{Hd{c}}}H`}{D`Ch}0{{D`Hl}Ch}{{{Hd{cI`}}}dH`}{D`{{E`{Hl{Ch{Hl}}}}}}{{H`{Gf{Gd}}Hj}{{Af{IbHh}}}}{{{Hd{cHn}}{Gf{Gd}}}{{Af{{Hd{cI`}}Hh}}}H`}10`{{{Hd{cI`}}}HbH`};;;{cEf{}}{c{{Af{e}}}{}{}}0000000000000{cEl{}}000000>>>>>>>{{{Hd{cI`}}}IdH`}``????{{}If}{{}Ih}{cc{}}0{IfAl}{IhAl}{Ih{{Ch{Ef}}}}{ce{}{}}0{{IffHj}{{Af{dHh}}}}{{IhfHj}{{Af{dHh}}}}87{{If{Gf{Gd}}Hj}{{Af{IbHh}}}}{{Ih{Gf{Gd}}Hj}{{Af{IbHh}}}}10====<<44```````{{Ijh}{{Af{dIl}}}}{{IjlCf}{{Af{dIl}}}}6666::66????>>66```````66666666::::6666``????????>>>>6666````````66{{InBj}J`}0{BhIn}<{f{{Af{{j{{Cl{lF`}}}}C`}}}}9{{{j{{Cl{lF`}}}}}Jb}{{CbCb{Dj{{Dh{Df}}}}}{{Af{fIn}}}}{cEf{}}{c{{Af{e}}}{}{}}0{cEl{}}>{{JbBd}Jb}{JbJb}{{{j{c}}}{{Cd{c}}}{JdJfG`Fd}}{{{j{{j{c}}}}{j{{j{c}}}}}d{JdJfG`Fd}}{Cb{{Af{{j{{Cl{lF`}}}}C`}}}}{{CbCbCb}{{Af{JbC`}}}}{{CbCbCbCb}{{Af{fJh}}}}{{{j{{Cl{lF`}}}}CbCbBd}{{Af{JbJh}}}}{{fCbCbCbBd}{{Af{dJh}}}}{{{Dj{{Dh{Df}}}}CbCb}{{Af{dJh}}}}{f{{Af{EfBn}}}}","D":"AHj","p":[[5,"Private",738],[1,"unit"],[5,"Model",0],[6,"Expression",209],[5,"Vec",739],[6,"Name",209],[5,"DecisionVariable",209],[5,"Reduction",0],[5,"Rule",0],[6,"ApplicationError",0],[6,"Result",740],[5,"Metadata",0],[5,"RuleSet",0],[6,"SolverFamily",0],[10,"Deserializer",741],[10,"Serializer",742],[6,"ErrorImpl",742],[1,"bool"],[5,"Error",743],[6,"Error",0],[5,"Formatter",744],[5,"Error",744],[5,"Error",745],[5,"Error",746],[1,"str"],[5,"HashSet",747],[6,"Domain",209],[6,"Option",748],[1,"u8"],[5,"HashMap",749],[10,"Hasher",750],[5,"SolverFamilyIter",485],[5,"SchemaGenerator",751],[6,"Schema",752],[5,"Context",753],[5,"RwLock",754],[5,"Arc",755],[17,"Output"],[1,"fn"],[1,"tuple"],[1,"slice"],[6,"Cow",756],[5,"String",757],[10,"Serializer",758],[10,"Error",759],[5,"TypeId",760],[1,"i32"],[6,"Constant",209],[6,"Range",209],[10,"Clone",761],[10,"Ord",762],[6,"ReturnType",209],[6,"Ordering",762],[10,"Deserialize",741],[10,"PartialEq",762],[10,"Debug",744],[10,"Serialize",758],[10,"Fn",763],[5,"Box",764],[8,"Result",746],[6,"RewriteError",421],[6,"ResolveRulesError",765],[5,"DistributedSlice",467],[10,"SolverAdaptor",485],[5,"SolverStats",766],[5,"Solver",485],[10,"SolverState",663],[6,"SolverError",485],[5,"Internal",767],[1,"usize"],[5,"ModelLoaded",663],[5,"ExecutionSuccess",663],[5,"SolveSuccess",485],[1,"f64"],[5,"Kissat",607],[5,"Minion",607],[10,"ModelModifier",638],[6,"ModificationFailure",638],[6,"EssenceParseError",709],[8,"Result",744],[6,"Value",768],[10,"Eq",762],[10,"Hash",750],[5,"Error",769],[8,"ApplicationResult",0],[6,"SearchStatus",485],[6,"SearchComplete",485],[6,"SearchIncomplete",485],[5,"NotModifiable",638],[5,"ExecutionFailure",663],[5,"Init",663]],"b":[[79,"impl-Debug-for-Error"],[80,"impl-Display-for-Error"],[81,"impl-Debug-for-Metadata"],[82,"impl-Display-for-Metadata"],[84,"impl-Display-for-ApplicationError"],[85,"impl-Debug-for-ApplicationError"],[87,"impl-Debug-for-Rule%3C\'a%3E"],[88,"impl-Display-for-Rule%3C\'a%3E"],[89,"impl-Display-for-RuleSet%3C\'a%3E"],[90,"impl-Debug-for-RuleSet%3C\'a%3E"],[91,"impl-Debug-for-SolverFamily"],[92,"impl-Display-for-SolverFamily"],[93,"impl-From%3CError%3E-for-Error"],[94,"impl-From%3CError%3E-for-Error"],[315,"impl-Debug-for-Constant"],[316,"impl-Display-for-Constant"],[319,"impl-Display-for-Expression"],[320,"impl-Debug-for-Expression"],[321,"impl-Debug-for-Name"],[322,"impl-Display-for-Name"],[324,"impl-Debug-for-DecisionVariable"],[325,"impl-Display-for-DecisionVariable"],[327,"impl-From%3Cbool%3E-for-Constant"],[328,"impl-From%3Ci32%3E-for-Constant"],[331,"impl-From%3Ci32%3E-for-Expression"],[333,"impl-From%3Cbool%3E-for-Expression"],[437,"impl-Display-for-RewriteError"],[438,"impl-Debug-for-RewriteError"],[537,"impl-Debug-for-SolverError"],[538,"impl-Display-for-SolverError"],[714,"impl-Display-for-EssenceParseError"],[715,"impl-Debug-for-EssenceParseError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAB0CSAAAAAEAAwAAAAUABQAMAAEAEAAAABIATQBoAAAAagAAAGwAAAB1AAIAgAADAIUABwCRAAkAnQAxANQAAwDZAAAA2wAAAN0AAADjAAIA6AAAAOoAAADvAAAA8QAAAPMAAAD1AAAA+AAAAPoABwADASoALwEXAEgBAQBMAQAATgEAAFIBAABdAQAAcgEqAJ4BBgCmAQAAqAEAAKwBAQCvAQAAsQEGALkBAADCAQAAxAEBAMsBAADNAQYA1QEGAN4BAADgAQQA5wEAAOkBDAD7AQAA/QEFAAUCFgAkAgAAJgIAAC4CAwAzAgUAOgIAADwCAAA+AiEAYgIFAGoCAgBvAhAAhgIFAJACBwCaAgIAnwIHALECHADPAgAA0QIGANoCCAA="}],\
["enum_compatability_macro",{"t":"X","n":["document_compatibility"],"q":[[0,"enum_compatability_macro"]],"i":[0],"f":"`","D":"d","p":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["minion_rs",{"t":"ICCHHPPPPPPPPGPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPFPIIGGIPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNPGPPGPPNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Callback","ast","error","get_from_table","run_minion","Abs","AllDiff","AllDiffMatrix","Bool","Bool","Bound","CheckAssign","CheckGsa","Constant","ConstantAsVar","Constraint","Difference","DisEq","Discrete","Div","DivUndefZero","Element","ElementOne","ElementUndefZero","Eq","ForwardChecking","FrameUpdate","GacAllDiff","GacEq","GacSchema","Gcc","GccWeak","Hamming","Ineq","Integer","LexLeq","LexLeqQuick","LexLeqRv","LexLess","LexLessQuick","LightTable","LitSumGeq","Max","Mddc","Min","MinusEq","Model","Modulo","ModuloUndefZero","NameRef","NegativeMddc","NegativeTable","NotHamming","NvalueGeq","NvalueLeq","Occurrence","OccurrenceGeq","OccurrenceLeq","Pow","Product","Reify","ReifyImply","ReifyImplyQuick","SparseBound","Str2Plus","SumGeq","SumLeq","SymbolTable","Table","Tuple","TwoVars","Var","VarDomain","VarName","WInIntervalSet","WInRange","WInset","WLiteral","WNotInRange","WNotInset","WNotLiteral","WatchElement","WatchElementOne","WatchElementOneUndefZero","WatchElementUndefZero","WatchLess","WatchNeq","WatchSumGeq","WatchSumLeq","WatchVecExistsLess","WatchVecNeq","WatchedAnd","WatchedOr","WeightedSumGeq","WeightedSumLeq","add_var","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constraints","contains","default","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_variable_order","get_vartype","into","into","into","into","into","into","named_variables","new","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","InvalidInstance","MinionError","NotImplemented","Other","RuntimeError","RuntimeError","UnknownError","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"minion_rs"],[5,"minion_rs::ast"],[175,"minion_rs::error"],[207,"alloc::string"],[208,"core::option"],[209,"core::result"],[210,"core::fmt"],[211,"core::fmt"],[212,"core::any"],[213,"anyhow"],[214,"core::error"]],"i":[0,0,0,0,0,11,11,11,13,10,10,11,11,0,12,0,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,0,11,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,8,3,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,8,8,3,11,12,13,10,8,3,3,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,3,11,12,13,10,8,19,0,6,6,0,6,19,6,19,6,19,19,6,6,19,19,6,6,6,19,19,6,19,6,6,19,6,19,6,19,6,19],"f":"```{b{{d{b}}}}{{fh}{{n{jl}}}}``````````````````````````````````````````````````````````````````````````````````````````{{A`AbAd}{{d{j}}}}{ce{}{}}00000000000{ff}{AfAf}{AhAh}{AjAj}{AdAd}{A`A`}{{ce}j{}{}}00000`{{A`Ab}Al}{{}f}{{ff}Al}{{AfAf}Al}{{AhAh}Al}{{AjAj}Al}{{AdAd}Al}{{A`A`}Al}{{fAn}B`}{{AfAn}B`}{{AhAn}B`}{{AjAn}B`}{{AdAn}B`}{{A`An}B`}{cc{}}00000{A`{{Bb{Ab}}}}{{A`Ab}{{d{Ad}}}}{ce{}{}}00000`{{}f}111111{c{{n{e}}}{}{}}00000000000{cBd{}}00000```````3333{{BfBf}Al}{{lAn}B`}0{{BfAn}B`}0{Bhl}{Bfl};{BjBf}<99{l{{d{Bl}}}}{cb{}}0999988","D":"Dn","p":[[5,"String",207],[6,"Option",208],[5,"Model",5],[8,"Callback",0],[1,"unit"],[6,"MinionError",175],[6,"Result",209],[5,"SymbolTable",5],[8,"VarName",5],[6,"VarDomain",5],[6,"Constraint",5],[6,"Var",5],[6,"Constant",5],[1,"bool"],[5,"Formatter",210],[8,"Result",210],[5,"Vec",211],[5,"TypeId",212],[6,"RuntimeError",175],[5,"Error",213],[1,"u32"],[10,"Error",214]],"b":[[187,"impl-Debug-for-MinionError"],[188,"impl-Display-for-MinionError"],[189,"impl-Display-for-RuntimeError"],[190,"impl-Debug-for-RuntimeError"],[191,"impl-From%3CError%3E-for-MinionError"],[192,"impl-From%3CRuntimeError%3E-for-MinionError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKgADAAGAAcADwAAABEAHQAwABMARQACAEoAFQBhACYAlgAAAJgAFwC3AAoAwwAAAMcACAA="}],\
["uniplate",{"t":"PPGPCNNNNNNNNNNNNNNNCNKEKMNNNNNNNNMNNNKGPNNNNNNNNNNNNNNNNNMNNN","n":["Many","One","Tree","Zero","biplate","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","into_iter","list","map","to_owned","try_from","try_into","type_id","uniplate","vzip","Biplate","Tree","Uniplate","biplate","cata","children","children_bi","descend","descend_bi","rewrite","transform","transform_bi","uniplate","universe","universe_bi","with_children","Uniplate","UniplateError","WrongNumberOfChildren","borrow","borrow_mut","children","descend","eq","fmt","fmt","fold","from","into","one_holed_context","rewrite","to_string","transform","try_from","try_into","type_id","uniplate","universe","vzip","with_children"],"q":[[0,"uniplate"],[22,"uniplate::biplate"],[38,"uniplate::uniplate"],[62,"core::clone"],[63,"core::marker"],[64,"core::cmp"],[65,"core::cmp"],[66,"core::fmt"],[67,"core::ops::function"],[68,"alloc::boxed"],[69,"alloc::sync"],[70,"core::result"],[71,"core::any"],[72,"alloc::vec"],[73,"core::option"],[74,"alloc::string"]],"i":[1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,18,19,19,18,19,18,19,19,18,19,19,18,19,0,0,24,24,24,20,20,24,24,24,20,24,24,20,20,24,20,24,24,24,20,20,24,20],"f":"`````{ce{}{}}0{{{b{c}}}{{b{c}}}{dfdh}}{{ce}j{}{}}{{{b{c}}{b{c}}}l{nfdh}}{{{b{c}}A`}Ab{Adfdh}}{cc{}}5{{{b{c}}}e{fdh}{}}{{{b{c}}}{{Al{{Af{c}}{Aj{Ah}}}}}{fdh}}{{{b{c}}{An{Ah}}}{{b{c}}}{fdh}}8{c{{B`{e}}}{}{}}0{cBb{}}`:```{Bd{{Al{{b{c}}{Aj{Ah}}}}}{fdhBf}}{{Bf{An{Ah}}}c{}}{Bf{{Af{Bf}}}}{Bd{{Af{c}}}{fdhBf}}{{Bf{An{Ah}}}Bf}{{Bd{An{Ah}}}Bd}110{Bf{{Al{{b{Bf}}{Aj{Ah}}}}}}43{{Bf{Af{Bf}}}Bf}```{ce{}{}}0{Bh{{Bj{Bh}}}}{{Bh{Bn{Bh}{{Bl{Bh}}}}}{{B`{BhC`}}}}{{C`C`}l}{{C`A`}Ab}0{{Bh{Bn{Bh{Bj{c}}}{{Bl{c}}}}}c{}}{cc{}}6{{BhCb}{{Cd{{Aj{Ah}}}}}}{{Bh{Bn{Bh}{{Bl{{Cd{Bh}}}}}}}{{B`{BhC`}}}}{cCf{}}7{c{{B`{e}}}{}{}}0{cBb{}}{Bh{{Al{{Bj{Bh}}{Aj{Ah}}}}}};<{{Bh{Bj{Bh}}}{{B`{BhC`}}}}","D":"C`","p":[[6,"Tree",0],[10,"Clone",62],[10,"Sized",63],[10,"Eq",64],[1,"unit"],[1,"bool"],[10,"PartialEq",64],[5,"Formatter",65],[8,"Result",65],[10,"Debug",65],[5,"Vector",66],[10,"Fn",67],[5,"Box",68],[1,"tuple"],[5,"Arc",69],[6,"Result",70],[5,"TypeId",71],[10,"Biplate",22],[10,"Uniplate",22],[10,"Uniplate",38],[5,"Vec",72],[17,"Output"],[1,"fn"],[6,"UniplateError",38],[1,"usize"],[6,"Option",73],[5,"String",74]],"b":[[46,"impl-Display-for-UniplateError"],[47,"impl-Debug-for-UniplateError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACYACwABAAoADgAAABAACQAeAAAAIgABACUAAAAnAAQALgACADYAAAA4AAIAPQAAAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
