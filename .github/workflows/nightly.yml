name: Nightly build

on: 
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write  

jobs:

  # check if anything has happened in the repo today
  #
  # https://stackoverflow.com/a/67527144
  check_date:
    runs-on: ubuntu-22.04
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day, and whether tests passed on main
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false" &&  gh run list -b main -w Test -L 1 --json conclusion | jq '.[].conclusion == "success"'

      - 

    build_nightly:
      name: "Build Nightly"
      needs: check_date
      if: ${{ needs.check_date.outputs.should_run != 'false' }}
      strategy: 
        fail-fast: false
        matrix:
          os: 
            - ubuntu-24.04     # x86_64 linux
            - ubuntu-24.04-arm # aarch64 linux 
            - macos-13         # x86_64 mac
            - macos-latest     # aarch64 mac

          # platform and arch info for naming the binary
          include:
            - os: ubuntu-24.04
              os_name: linux
              arch_name: x86_64

            - os: ubuntu-24.04-arm
              os_name: linux
              arch_name: aarch64

            - os: macos-13
              os_name: macos
              arch_name: x86_64

            - os: macos-latest
              os_name: macos
              arch_name: aarch64


      runs-on: $${{ matrix.os }}
      env:
        release_prefix: "conjure-oxide-nightly-$${{ matrix.arch_name }}-$${{ matrix.os_name }}"
        conjure_version: 2.5.1

      steps:
        - uses: actions/checkout@v4

        - name: Run sccache-cache
          uses: mozilla-actions/sccache-action@v0.0.9

        - name: Install rust
          run: rustup update stable && rustup default stable

        - name: Build release 
          run: |
            cargo build --release conjure_oxide
            mkdir -p bin # place to store all the different stuff we want to add to the release
            cp target/release/conjure_oxide bin

        - name: Download Conjure release
          run: |
            CONJURE_ZIP="conjure-v$${{ env.conjure_version }}-$${{ matrix.os_name }}-with-solvers.zip"
            wget "https://github.com/conjure-cp/conjure/releases/download/v$${{ env.conjure_version }}/${CONJURE_ZIP}"
            unzip -d bin ${CONJURE_ZIP}

        - name: Prepare releases
          run: |
            mkdir dist 

            # -j: include the files, ignoring the directory names
            
            zip -j "dist/$${{ env.release_prefix }}-standalone.zip" bin/conjure_oxide
            zip -j "dist/$${{ env.release_prefix }}-with-conjure.zip" bin/conjure_oxide bin/conjure
            zip -j "dist/$${{ env.release_prefix }}-with-solvers.zip" bin/*

        - name: Create release
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: | 
            git config user.name "GitHub Actions"
            git config user.email "github-actions@users.noreply.github.com"

            # delete nightly tag
            git push --delete origin nightly 
            
            # create new nightly tag 
            git tag nightly -am "Nightly release: $(date -I)"
            git push nightly origin

            gh release create nightly --notes-from-tag --prerelease --title "nightly ($(date -I))" --verify-tag ./dist/*.zip


